{"version":3,"sources":["views/attribute/Name.js"],"names":["attributeNames","id","name","ServiceForm","useState","modal","setModal","modal2","setModal2","toggleModalDanger","toggleModalPrimary","tag","sm","for","className","FormGroup","addonType","size","type","placeholder","Ripple","color","onClick","e","preventDefault","responsive","map","value","index","caret","right","href","isOpen","toggle","modalClassName"],"mappings":"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","file":"static/js/64.61c736c3.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport avatar1 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport '../../@core/scss/react/libs/editor/editor.scss'\r\nimport '../../@core/scss/react/libs/file-uploader/file-uploader.scss'\r\nimport 'uppy/dist/uppy.css'\r\nimport { MoreVertical, Edit, Trash, User } from 'react-feather'\r\nimport {CgAttribution} from 'react-icons/cg'\r\nimport {  Card, CardHeader, Form, Row, Col, Label, InputGroup, FormGroup, InputGroupAddon, InputGroupText, Input, CardTitle, CardBody, Table,  Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Button } from 'reactstrap'\r\n\r\n  const attributeNames = [\r\n    {   id:0,\r\n        name : 'attribute name'\r\n    },\r\n    {\r\n        id:1,\r\n        name : 'attribute name 2'\r\n    }\r\n  \r\n  \r\n]\r\nconst colourOptions = [\r\n    { value: 'ocean', label: 'Ocean' },\r\n    { value: 'blue', label: 'Blue' },\r\n    { value: 'purple', label: 'Purple' },\r\n    { value: 'red', label: 'Red' },\r\n    { value: 'orange', label: 'Orange' }\r\n  ]\r\n  const ServiceForm = () => {\r\n    const [modal, setModal] = useState(null)\r\n    const [modal2, setModal2] = useState(null)\r\n\r\n    const toggleModalDanger = id => {\r\n      if (modal !== id) {\r\n        setModal(id)\r\n      } else {\r\n        setModal(null)\r\n      }\r\n    }\r\n    const toggleModalPrimary = id => {\r\n        if (modal2 !== id) {\r\n          setModal2(id)\r\n        } else {\r\n          setModal2(null)\r\n        }\r\n      }\r\n    return (\r\n        <>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Add New Attribute Name</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Form>\r\n            <Row>\r\n              <Col sm='12' >\r\n                {/* color form */}\r\n                <Label for='att-name'>Attribute Name</Label>\r\n                <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                <InputGroupAddon addonType='prepend'>\r\n                    <InputGroupText>\r\n                    <CgAttribution size={15} />\r\n                    </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type='text' name='name' id='att-name' placeholder='Enter your Attibute name' />\r\n                </InputGroup>\r\n              </Col>\r\n               <Col sm='12' className=\"\">\r\n                <FormGroup className='d-flex mb-0'>\r\n                  <Button.Ripple className='mr-1' color='primary' type='submit' onClick={e => e.preventDefault()}>\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n      <CardBody>\r\n      <CardTitle>All Attribute Names</CardTitle>\r\n\r\n    <Table responsive>\r\n      <thead>\r\n        <tr>\r\n          <th>Attribute Name</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      {\r\n          attributeNames.map((value, index) => {\r\n              return (\r\n              <tr key={index}>\r\n              <td>\r\n                {value.name}\r\n              </td>\r\n      \r\n                <td>\r\n                  <UncontrolledDropdown>\r\n                  <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                      <MoreVertical size={15} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                      <DropdownItem href='/'  onClick={(e) => { \r\n                        e.preventDefault()  \r\n                        toggleModalPrimary(value.id) \r\n                        }}>\r\n                      <Edit className='mr-50' size={15} />  <span className='align-middle'>Edit</span>\r\n                      </DropdownItem>\r\n\r\n                      <DropdownItem href='/' onClick={(e) => { \r\n                        e.preventDefault()  \r\n                        toggleModalDanger(value.id) \r\n                        }}>\r\n                      <Trash className='mr-50' size={15} /> <span className='align-middle'>Delete</span>\r\n                      </DropdownItem>\r\n                  </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <Modal\r\n                    isOpen={modal2 === value.id}\r\n                    toggle={() => toggleModalPrimary(value.id)}\r\n                    className='modal-dialog-centered'\r\n                    modalClassName=\"modal-primary\"\r\n                    key={value.id}>\r\n                    <ModalHeader toggle={() => toggleModalPrimary(value.id)}>Edit</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                             <Row>\r\n                                <Col sm='12' >\r\n                                    {/* color form */}\r\n                                    <Label for='att-name'>Attribute Name</Label>\r\n                                    <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                        <InputGroupText>\r\n                                        <CgAttribution size={15} />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input type='text' name='name' id='att-name' placeholder='Enter your Attibute name' />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                               \r\n                            </Row>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                            \r\n                      <Button color=\"primary\" onClick={() => toggleModalPrimary(value.id)}>\r\n                        Submit\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  {/* delete modal */}\r\n                  <Modal\r\n                    isOpen={modal === value.id}\r\n                    toggle={() => toggleModalDanger(value.id)}\r\n                    className='modal-dialog-centered'\r\n                    modalClassName=\"modal-danger\"\r\n                    key={value.id}>\r\n                    <ModalHeader toggle={() => toggleModalDanger(value.id)}>Delete</ModalHeader>\r\n                    <ModalBody>\r\n                    Are you sure you want to delete this?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button color=\"danger\" onClick={() => toggleModalDanger(value.id)}>\r\n                        delete\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n              </td>\r\n              </tr>\r\n              )\r\n          })\r\n      }\r\n     \r\n      \r\n    </tbody>\r\n  </Table>\r\n  </CardBody>\r\n  </Card>\r\n  </>\r\n    )\r\n  }\r\n  export default ServiceForm\r\n  "],"sourceRoot":""}