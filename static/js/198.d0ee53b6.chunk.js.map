{"version":3,"sources":["views/front-end/header/index.js"],"names":["header","id","text","image","btnText","Header","useState","modal2","setModal2","toggleModalPrimary","responsive","map","value","index","src","height","width","className","color","size","caret","right","href","onClick","e","preventDefault","isOpen","toggle","modalClassName","sm","for","tag","FormGroup","addonType","type","placeholder","name"],"mappings":"4aAMQA,EAAS,CACb,CAAIC,GAAG,EACHC,KAAO,4BACPC,MAAQ,yEACRC,QAAU,aA2IDC,UAvIA,WACb,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGMC,EAAqB,SAAAR,GAErBO,EADED,IAAWN,EACHA,EAEA,OAGhB,OACI,mCAEF,cAAC,IAAD,UACA,eAAC,IAAD,WACA,cAAC,IAAD,qBAEF,eAAC,IAAD,CAAOS,YAAU,EAAjB,UACE,gCACE,+BACE,sCACA,uCACA,6CACA,8CAGJ,gCAEIV,EAAOW,KAAI,SAACC,EAAOC,GACf,OACA,+BACA,6BACGD,EAAMV,OAGT,mCAAK,qBAAKY,IAAKF,EAAMT,MAAOY,OAAO,KAAKC,MAAM,UAC9C,6BAAKJ,EAAMR,UACT,+BACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAgBa,UAAU,sBAAsBC,MAAM,cAAcC,KAAK,KAAKC,OAAK,EAAnF,SACI,cAAC,IAAD,CAAcD,KAAM,OAExB,cAAC,IAAD,CAAcE,OAAK,EAAnB,SACI,eAAC,IAAD,CAAcC,KAAK,IAAKC,QAAS,SAACC,GAChCA,EAAEC,iBACFhB,EAAmBG,EAAMX,KAF3B,UAIA,cAAC,IAAD,CAAMgB,UAAU,QAAQE,KAAM,KAJ9B,KAIsC,sBAAMF,UAAU,eAAhB,0BAM1C,eAAC,IAAD,CACES,OAAQnB,IAAWK,EAAMX,GACzB0B,OAAQ,kBAAMlB,EAAmBG,EAAMX,KACvCgB,UAAU,wBACVW,eAAe,gBAJjB,UAME,cAAC,IAAD,CAAaD,OAAQ,kBAAMlB,EAAmBG,EAAMX,KAApD,kBACA,cAAC,IAAD,UACG,cAAC,IAAD,UACK,eAAC,IAAD,WACI,eAAC,IAAD,CAAK4B,GAAG,KAAR,UAEI,cAAC,IAAD,CAAOC,IAAI,OAAX,yBACA,eAAC,IAAD,CAAYb,UAAU,oBAAoBc,IAAKC,IAA/C,UACA,cAAC,IAAD,CAAiBC,UAAU,UAA3B,SACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAad,KAAM,SAGvB,cAAC,IAAD,CAAOe,KAAK,OAAOjC,GAAG,OAAOkC,YAAY,0BAG7C,cAAC,IAAD,CAAMN,GAAG,KAAT,SACI,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,IAAI,OAAX,0BACA,cAAC,IAAD,CAAaI,KAAK,OAAOjC,GAAG,OAAOmC,KAAK,oBAG5C,eAAC,IAAD,CAAKP,GAAG,KAAR,UAEI,cAAC,IAAD,CAAOC,IAAI,MAAX,yBACA,eAAC,IAAD,CAAYb,UAAU,oBAAoBc,IAAKC,IAA/C,UACA,cAAC,IAAD,CAAiBC,UAAU,UAA3B,SACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAsBd,KAAM,SAGhC,cAAC,IAAD,CAAOe,KAAK,OAAOjC,GAAG,MAAMkC,YAAY,iCAG5C,eAAC,IAAD,CAAKN,GAAG,KAAR,UAEI,cAAC,IAAD,CAAOC,IAAI,MAAX,wBACA,eAAC,IAAD,CAAYb,UAAU,oBAAoBc,IAAKC,IAA/C,UACA,cAAC,IAAD,CAAiBC,UAAU,UAA3B,SACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAsBd,KAAM,SAGhC,cAAC,IAAD,CAAOe,KAAK,OAAOjC,GAAG,MAAMkC,YAAY,wCAOxD,cAAC,IAAD,UAEE,cAAC,IAAD,CAAQjB,MAAM,UAAUK,QAAS,kBAAMd,EAAmBG,EAAMX,KAAhE,wBArDGW,EAAMX,SA5BRY","file":"static/js/198.d0ee53b6.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { MoreVertical, Edit, User } from 'react-feather'\r\nimport {BsFillMenuButtonFill} from 'react-icons/bs'\r\nimport {FaTextWidth} from 'react-icons/fa'\r\nimport {  Card, CustomInput, Spinner, Form, Row, Col, Label, InputGroup, FormGroup, InputGroupAddon, InputGroupText, Input, CardTitle, CardBody, Table,  Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Button } from 'reactstrap'\r\n\r\n  const header = [\r\n    {   id:0,\r\n        text : \"looking for a babysitter?\",\r\n        image : 'https://nanny-frontend.netlify.app/static/media/baby-icon.06b14fb2.png',\r\n        btnText : 'click me'\r\n    }\r\n  \r\n]\r\n  const Header = () => {\r\n    const [modal2, setModal2] = useState(null)\r\n\r\n\r\n    const toggleModalPrimary = id => {\r\n        if (modal2 !== id) {\r\n          setModal2(id)\r\n        } else {\r\n          setModal2(null)\r\n        }\r\n      }\r\n    return (\r\n        <>\r\n      \r\n      <Card>\r\n      <CardBody>\r\n      <CardTitle>Header</CardTitle>\r\n\r\n    <Table responsive>\r\n      <thead>\r\n        <tr>\r\n          <th>Text</th>\r\n          <th>Image</th>\r\n          <th>Button Text</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      {\r\n          header.map((value, index) => {\r\n              return (\r\n              <tr key={index}>\r\n              <td>\r\n                {value.text}\r\n              </td>\r\n      \r\n              <td> <img src={value.image} height=\"40\" width=\"40\" /></td>\r\n              <td>{value.btnText}</td>\r\n                <td>\r\n                  <UncontrolledDropdown>\r\n                  <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                      <MoreVertical size={15} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                      <DropdownItem href='/'  onClick={(e) => { \r\n                        e.preventDefault()  \r\n                        toggleModalPrimary(value.id) \r\n                        }}>\r\n                      <Edit className='mr-50' size={15} />  <span className='align-middle'>Edit</span>\r\n                      </DropdownItem>\r\n\r\n                    \r\n                  </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <Modal\r\n                    isOpen={modal2 === value.id}\r\n                    toggle={() => toggleModalPrimary(value.id)}\r\n                    className='modal-dialog-centered'\r\n                    modalClassName=\"modal-primary\"\r\n                    key={value.id}>\r\n                    <ModalHeader toggle={() => toggleModalPrimary(value.id)}>Edit</ModalHeader>\r\n                    <ModalBody>\r\n                       <Form>\r\n                            <Row>\r\n                                <Col sm='12' >\r\n                                    {/* color form */}\r\n                                    <Label for='text'>Header Text</Label>\r\n                                    <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                        <InputGroupText>\r\n                                        <FaTextWidth size={15} />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input type='text' id='text' placeholder='Enter your text' />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                                <Col  sm='12'>\r\n                                    <FormGroup>\r\n                                    <Label for='icon'>Header Image</Label>\r\n                                    <CustomInput type='file' id='icon' name='customFile' />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col sm='12' >\r\n                                    {/* color form */}\r\n                                    <Label for='btn'>Button Text</Label>\r\n                                    <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                        <InputGroupText>\r\n                                        <BsFillMenuButtonFill size={15} />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input type='text' id='btn' placeholder='Enter your button text' />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                                <Col sm='12' >\r\n                                    {/* color form */}\r\n                                    <Label for='url'>Button Url</Label>\r\n                                    <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                        <InputGroupText>\r\n                                        <BsFillMenuButtonFill size={15} />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input type='text' id='url' placeholder='Enter your button link' />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            \r\n                            </Row>\r\n                       </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                            \r\n                      <Button color=\"primary\" onClick={() => toggleModalPrimary(value.id)}>\r\n                        Submit\r\n                        {/* spinner */}\r\n                        {/* <Spinner color='light' /> */}\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n               \r\n              </td>\r\n              </tr>\r\n              )\r\n          })\r\n      }\r\n     \r\n      \r\n    </tbody>\r\n  </Table>\r\n  </CardBody>\r\n  </Card>\r\n  </>\r\n    )\r\n  }\r\n  export default Header\r\n  "],"sourceRoot":""}