{"version":3,"sources":["views/services/List.js","middleware/API.js","views/components/toastify/index.js","middleware/BaseURL.js"],"names":["ServiceTable","useState","allServices","setAllServices","fetchServiceData","a","Action","get","response","data","success","useEffect","map","value","modal","setModal","toggleModal","id","deleteService","delete","toast","title","text","error","responsive","index","heading","src","baseURL","image","height","width","alt","className","color","size","caret","right","to","_id","href","onClick","e","preventDefault","isOpen","toggle","modalClassName","axios","create","SuccessToast","props","icon","role","ErrorToast"],"mappings":"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","file":"static/js/87.f6a81307.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nimport { Card, CardTitle, CardBody, Table, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Button } from 'reactstrap'\r\nimport avatar1 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport { Link } from 'react-router-dom'\r\nimport { MoreVertical, Edit, Trash } from 'react-feather'\r\nimport Action from '../../middleware/API'\r\nimport baseURL from '../../middleware/BaseURL'\r\n//import toast types from components \r\nimport { SuccessToast, ErrorToast } from '../components/toastify'\r\n//import toasts from react\r\nimport { toast } from 'react-toastify'\r\n\r\nconst ServiceTable = () => {\r\n  //GET DATA\r\n  const [allServices, setAllServices] = useState([])\r\n\r\n  async function fetchServiceData() {\r\n    const response = await Action.get('/Service', {})\r\n    if (response.data.success === true) {\r\n      setAllServices(response.data.data)\r\n    }\r\n  }\r\n\r\n  useEffect(async () => {\r\n    fetchServiceData()\r\n    allServices.map((value) => {\r\n    })\r\n  }, [allServices])\r\n\r\n  const [modal, setModal] = useState(null)\r\n\r\n  const toggleModal = id => {\r\n    if (modal !== id) {\r\n      setModal(id)\r\n    } else {\r\n      setModal(null)\r\n    }\r\n  }\r\n  //delete api \r\n  const deleteService = async (id) => {\r\n    const res = await Action.delete(`/service?id=${ id }`)\r\n\r\n    if (res.data.success) {\r\n      toast.success(<SuccessToast title=\"Success\" text=\"Service Deleted Successfully!\" />)\r\n      setModal(null)\r\n    } else {\r\n      toast.error(<ErrorToast title=\"error\" text=\"Something went wrong, try again later\" />)\r\n    }\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle>All Services</CardTitle>\r\n\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>S.no</th>\r\n              <th>Service Name</th>\r\n              <th>Image</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              allServices.map((value, index) => {\r\n                return (\r\n                  <tr key={ index }>\r\n                    <td>{ index + 1 }</td>\r\n                    <td>{ value.heading }</td>\r\n                    <td>\r\n                      <img src={ baseURL + value.image } height=\"50\" width=\"50\" alt=\"\" />\r\n                    </td>\r\n                    <td>\r\n                      <UncontrolledDropdown>\r\n                        <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                          <MoreVertical size={ 15 } />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <Link to={ `/services/edit/${ value._id }` }>\r\n                            <DropdownItem href='/' >\r\n                              <Edit className='mr-50' size={ 15 } />  <span className='align-middle'>Edit</span>\r\n                            </DropdownItem>\r\n                          </Link>\r\n\r\n                          <DropdownItem href='/' onClick={ (e) => {\r\n                            e.preventDefault()\r\n                            toggleModal(value._id)\r\n                          } }>\r\n                            <Trash className='mr-50' size={ 15 } /> <span className='align-middle'>Delete</span>\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                      <Modal\r\n                        isOpen={ modal === value._id }\r\n                        toggle={ () => toggleModal(value.id) }\r\n                        className='modal-dialog-centered'\r\n                        modalClassName=\"modal-danger\"\r\n                        key={ value.id }>\r\n                        <ModalHeader toggle={ () => toggleModal(value._id) }>Delete</ModalHeader>\r\n                        <ModalBody>\r\n                          Are you sure you want to delete this?\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                          <Button color=\"danger\" onClick={ () => deleteService(value._id) }>\r\n                            delete\r\n                          </Button>\r\n                        </ModalFooter>\r\n                      </Modal>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n\r\n\r\n          </tbody>\r\n        </Table>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ServiceTable\r\n","\r\nimport axios from 'axios'\r\n\r\nexport default axios.create({\r\n    //baseURL: `http://localhost:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    baseURL: `https://nanybackend.herokuapp.com`\r\n})","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport {Check, X, AlertTriangle, Info } from 'react-feather'\n\n//toast success\nexport const SuccessToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Success!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast error\nexport const ErrorToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\n        <h6 className='toast-title'>Error!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast warning\nexport const WarningToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast info\nexport const InfoToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n) ","//const baseURL = \"http://localhost:4000/\"\r\n// const baseURL = \"http://3.94.191.228:4000/\"\r\nconst baseURL = `https://nanybackend.herokuapp.com/image/`\r\nexport default baseURL"],"sourceRoot":""}