{"version":3,"sources":["views/pages/authentication/Login.js","../node_modules/reactstrap/es/Alert.js","@core/components/input-password-toggle/index.js"],"names":["ToastContent","name","role","className","size","color","icon","Login","props","useSkin","skin","ability","useContext","AbilityContext","dispatch","useDispatch","history","useHistory","useState","email","setEmail","password","setPassword","useForm","register","errors","handleSubmit","illustration","source","require","default","to","onClick","e","preventDefault","src","Logo","width","height","alt","lg","sm","md","tag","id","style","top","right","target","placement","onSubmit","data","isObjEmpty","useJwt","login","then","res","userData","accessToken","refreshToken","handleLogin","update","push","getHomeRouteForLoggedInUser","toast","success","fullName","username","transition","Slide","hideProgressBar","autoClose","catch","err","console","log","for","autoFocus","type","value","placeholder","onChange","classnames","innerRef","required","validate","label","Ripple","block","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","i","arguments","length","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","propTypes","children","PropTypes","node","string","closeClassName","closeAriaLabel","cssModule","fade","bool","isOpen","toggle","func","tagPropType","shape","Fade","oneOfType","defaultProps","unmountOnExit","Alert","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","closeClasses","alertTransition","baseClass","timeout","React","createElement","_extends","in","InputPasswordToggle","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","addonType","renderIcon"],"mappings":"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","file":"static/js/164.2a2bfbdf.chunk.js","sourcesContent":["import { useState, useContext, Fragment } from 'react'\nimport classnames from 'classnames'\nimport Avatar from '@components/avatar'\nimport { useSkin } from '@hooks/useSkin'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { useDispatch } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { toast, Slide } from 'react-toastify'\nimport { handleLogin } from '@store/actions/auth'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { Link, useHistory } from 'react-router-dom'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\nimport { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\nimport Logo from '../../../../src/assets/images/logo/logo-m.png'\n\nimport {\n  Alert,\n  Row,\n  Col,\n  CardTitle,\n  CardText,\n  Form,\n  Input,\n  FormGroup,\n  Label,\n  CustomInput,\n  Button,\n  UncontrolledTooltip\n} from 'reactstrap'\n\nimport '@styles/base/pages/page-auth.scss'\n\nconst ToastContent = ({ name, role }) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n        <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span>You have successfully logged in as an {role} user to Vuexy. Now you can start to explore. Enjoy!</span>\n    </div>\n  </Fragment>\n)\n\nconst Login = props => {\n  const [skin, setSkin] = useSkin()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [email, setEmail] = useState('admin@demo.com')\n  const [password, setPassword] = useState('admin')\n\n  const { register, errors, handleSubmit } = useForm()\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const onSubmit = data => {\n    if (isObjEmpty(errors)) {\n      useJwt\n        .login({ email, password })\n        .then(res => {\n          const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\n          dispatch(handleLogin(data))\n          ability.update(res.data.userData.ability)\n          history.push(getHomeRouteForLoggedInUser(data.role))\n          toast.success(\n            <ToastContent name={data.fullName || data.username || 'John Doe'} role={data.role || 'admin'} />,\n            { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n          )\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  return (\n    <div className='auth-wrapper auth-v2'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <img src={Logo} width=\"150\" height=\"120\" alt=\"\"/>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login V2' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\n              Welcome to Admin!\n            </CardTitle>\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\n            <Alert color='primary'>\n              <div className='alert-body font-small-2'>\n                <p>\n                  <small className='mr-50'>\n                    <span className='font-weight-bold'>Admin:</span> admin@demo.com | admin\n                  </small>\n                </p>\n                <p>\n                  <small className='mr-50'>\n                    <span className='font-weight-bold'>Client:</span> client@demo.com | client\n                  </small>\n                </p>\n              </div>\n              <HelpCircle\n                id='login-tip'\n                className='position-absolute'\n                size={18}\n                style={{ top: '10px', right: '10px' }}\n              />\n              <UncontrolledTooltip target='login-tip' placement='left'>\n                This is just for ACL demo purpose.\n              </UncontrolledTooltip>\n            </Alert>\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Input\n                  autoFocus\n                  type='email'\n                  value={email}\n                  id='login-email'\n                  name='login-email'\n                  placeholder='john@example.com'\n                  onChange={e => setEmail(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-email'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <div className='d-flex justify-content-between'>\n                  <Label className='form-label' for='login-password'>\n                    Password\n                  </Label>\n                  <Link to='/forgot-password'>\n                    <small>Forgot Password?</small>\n                  </Link>\n                </div>\n                <InputPasswordToggle\n                  value={password}\n                  id='login-password'\n                  name='login-password'\n                  className='input-group-merge'\n                  onChange={e => setPassword(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-password'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Remember Me' />\n              </FormGroup>\n              <Button.Ripple type='submit' color='primary' block>\n                Sign in\n              </Button.Ripple>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='mr-25'>New on our platform?</span>\n              <Link to='/register'>\n                <span>Create an account</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button.Ripple color='facebook'>\n                <Facebook size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='twitter'>\n                <Twitter size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='google'>\n                <Mail size={14} />\n              </Button.Ripple>\n              <Button.Ripple className='mr-0' color='github'>\n                <GitHub size={14} />\n              </Button.Ripple>\n            </div>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Login\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}