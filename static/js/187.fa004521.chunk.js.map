{"version":3,"sources":["views/front-end/how-it-works/index.js"],"names":["sections","id","icon","heading","text","WorkList","useState","modal","setModal","toggleModalPrimary","responsive","map","value","index","src","alt","height","width","className","color","size","caret","right","href","onClick","e","preventDefault","isOpen","toggle","modalClassName","sm","for","type","name","tag","FormGroup","addonType","placeholder"],"mappings":"obAQQA,EAAW,CACf,CACIC,GAAG,EACHC,KAAO,qEACPC,QAAU,mBACVC,KAAO,8BAEX,CACIH,GAAG,EACHC,KAAO,qEACPC,QAAU,mBACVC,KAAO,8BAEX,CACIH,GAAG,EACHC,KAAO,qEACPC,QAAU,mBACVC,KAAO,8BAEX,CACIH,GAAG,EACHC,KAAO,qEACPC,QAAU,mBACVC,KAAO,+BA4HEC,UAxHE,WACf,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAqB,SAAAR,GAEvBO,EADED,IAAUN,EACHA,EAEA,OAIb,OACI,mCACA,cAAC,IAAD,UACA,eAAC,IAAD,WACA,cAAC,IAAD,uBAEA,eAAC,IAAD,CAAOS,YAAU,EAAjB,UACE,gCACE,+BACE,sCACA,yCACA,2CAGJ,gCAEAV,EAASW,KAAI,SAACC,EAAOC,GACjB,OACA,+BACA,6BACE,qBAAKC,IAAKF,EAAMV,KAAMa,IAAI,GAAGC,OAAO,KAAKC,MAAM,SAGjD,mCAAML,EAAMT,QAAZ,OACA,mCAAMS,EAAMR,KAAZ,OACE,+BACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAgBc,UAAU,sBAAsBC,MAAM,cAAcC,KAAK,KAAKC,OAAK,EAAnF,SACI,cAAC,IAAD,CAAcD,KAAM,OAExB,cAAC,IAAD,CAAcE,OAAK,EAAnB,SACI,eAAC,IAAD,CAAcC,KAAK,IAAIC,QAAS,SAACC,GAC/BA,EAAEC,iBACFjB,EAAmBG,EAAMX,KAF3B,UAIA,cAAC,IAAD,CAAMiB,UAAU,QAAQE,KAAM,KAJ9B,KAIsC,sBAAMF,UAAU,eAAhB,0BAMzC,eAAC,IAAD,CACCS,OAAQpB,IAAUK,EAAMX,GACxB2B,OAAQ,kBAAMnB,EAAmBG,EAAMX,KACvCiB,UAAU,wBACVW,eAAe,gBAJhB,UAMC,cAAC,IAAD,CAAaD,OAAQ,kBAAMnB,EAAmBG,EAAMX,KAApD,kBACA,cAAC,IAAD,UACA,cAAC,IAAD,UACC,eAAC,IAAD,WACD,cAAC,IAAD,CAAK6B,GAAG,KAAR,SACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,IAAI,OAAX,yBACA,cAAC,IAAD,CAAaC,KAAK,OAAO/B,GAAG,OAAOgC,KAAK,oBAK1C,eAAC,IAAD,CAAKH,GAAG,KAAR,UAEE,cAAC,IAAD,CAAOC,IAAI,eAAX,0BACA,eAAC,IAAD,CAAYb,UAAU,oBAAoBgB,IAAKC,IAA/C,UACA,cAAC,IAAD,CAAiBC,UAAU,UAA3B,SACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAahB,KAAM,SAGvB,cAAC,IAAD,CAAOY,KAAK,OAAO/B,GAAG,eAAeoC,YAAY,6BAKnD,eAAC,IAAD,CAAKP,GAAG,KAAR,UAEE,cAAC,IAAD,CAAOC,IAAI,YAAX,uBACA,eAAC,IAAD,CAAYb,UAAU,oBAAoBgB,IAAKC,IAA/C,UACA,cAAC,IAAD,CAAiBC,UAAU,UAA3B,SACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAahB,KAAM,SAGvB,cAAC,IAAD,CAAOY,KAAK,OAAO/B,GAAG,YAAYoC,YAAY,iCAMhD,cAAC,IAAD,UACE,cAAC,IAAD,CAAQlB,MAAM,UAAUK,QAAS,kBAAMf,EAAmBG,EAAMX,KAAhE,wBA3CGW,EAAMX,SA5BRY,oB","file":"static/js/187.fa004521.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport '../../../@core/scss/react/libs/editor/editor.scss'\r\nimport { MoreVertical, Edit, Trash, User } from 'react-feather'\r\nimport {FaTextWidth} from 'react-icons/fa'\r\n\r\n\r\nimport {  Card, CustomInput, Spinner, Form, Row, Col, Label, InputGroup, FormGroup, InputGroupAddon, InputGroupText, Input, CardTitle, CardBody, Table,  Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Button } from 'reactstrap'\r\n\r\n  const sections = [\r\n    {\r\n        id:0,\r\n        icon : 'https://nanny-frontend.netlify.app/static/media/step1.bd10ab3f.png',\r\n        heading : 'Join the Network',\r\n        text : \"Lorem ipsum dolor sit amet\"\r\n    },\r\n    {\r\n        id:1,\r\n        icon : 'https://nanny-frontend.netlify.app/static/media/step2.7fb5a3ea.png',\r\n        heading : 'Join the Network',\r\n        text : \"Lorem ipsum dolor sit amet\"\r\n    },\r\n    {\r\n        id:2,\r\n        icon : 'https://nanny-frontend.netlify.app/static/media/step3.2de5c9d4.png',\r\n        heading : 'Join the Network',\r\n        text : \"Lorem ipsum dolor sit amet\"\r\n    },\r\n    {\r\n        id:3,\r\n        icon : 'https://nanny-frontend.netlify.app/static/media/step4.b999f632.png',\r\n        heading : 'Join the Network',\r\n        text : \"Lorem ipsum dolor sit amet\"\r\n    }\r\n\r\n]\r\n  const WorkList = () => {\r\n    const [modal, setModal] = useState(null)\r\n\r\n    const toggleModalPrimary = id => {\r\n      if (modal !== id) {\r\n        setModal(id)\r\n      } else {\r\n        setModal(null)\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card>\r\n        <CardBody>\r\n        <CardTitle>All List</CardTitle>\r\n\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Icon</th>\r\n              <th>Heading</th>\r\n              <th>Text</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n          sections.map((value, index) => {\r\n              return (\r\n              <tr key={index}>\r\n              <td>\r\n                <img src={value.icon} alt=\"\" height=\"50\" width=\"50\"/>\r\n              </td>\r\n\r\n              <td> {value.heading} </td>\r\n              <td> {value.text} </td>\r\n                <td>\r\n                  <UncontrolledDropdown>\r\n                  <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                      <MoreVertical size={15} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                      <DropdownItem href='/' onClick={(e) => { \r\n                        e.preventDefault()  \r\n                        toggleModalPrimary(value.id) \r\n                        }}>\r\n                      <Edit className='mr-50' size={15} />  <span className='align-middle'>Edit</span>\r\n                      </DropdownItem>\r\n\r\n                  </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                   {/* edit modal */}\r\n                   <Modal\r\n                    isOpen={modal === value.id}\r\n                    toggle={() => toggleModalPrimary(value.id)}\r\n                    className='modal-dialog-centered'\r\n                    modalClassName=\"modal-primary\"\r\n                    key={value.id}>\r\n                    <ModalHeader toggle={() => toggleModalPrimary(value.id)}>Edit</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form>\r\n                     <Row>\r\n                    <Col sm='12'>\r\n                      <FormGroup>\r\n                      <Label for='icon'>Upload Icon</Label>\r\n                      <CustomInput type='file' id='icon' name='customFile' />\r\n                      </FormGroup>\r\n                    \r\n                    </Col>\r\n                    \r\n                    <Col sm=\"12\">\r\n                      {/* how it works form */}\r\n                      <Label for='icon-heading'>Icon Heading</Label>\r\n                      <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                      <InputGroupAddon addonType='prepend'>\r\n                          <InputGroupText>\r\n                          <FaTextWidth size={15} />\r\n                          </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input type='text' id='icon-heading' placeholder='Enter your Heading' />\r\n                      </InputGroup>\r\n                    </Col> \r\n\r\n\r\n                    <Col sm=\"12\">\r\n                      {/* how it works form */}\r\n                      <Label for='icon-text'>Icon Text</Label>\r\n                      <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                      <InputGroupAddon addonType='prepend'>\r\n                          <InputGroupText>\r\n                          <FaTextWidth size={15} />\r\n                          </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input type='text' id='icon-text' placeholder='Enter your Text' />\r\n                      </InputGroup>\r\n                    </Col> \r\n                </Row>\r\n                </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button color=\"primary\" onClick={() => toggleModalPrimary(value.id)}>\r\n                        Submit\r\n                          {/* spinner */}\r\n                          {/* <Spinner color='light' /> */}\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                 \r\n              </td>\r\n              </tr>\r\n              )\r\n          })\r\n        }\r\n    </tbody>\r\n  </Table>\r\n  </CardBody>\r\n  </Card>\r\n  </>\r\n    )\r\n  }\r\n  export default WorkList"],"sourceRoot":""}