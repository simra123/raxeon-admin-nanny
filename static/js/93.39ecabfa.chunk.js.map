{"version":3,"sources":["views/front-end/header/index.js","middleware/API.js","middleware/BaseURL.js"],"names":["Header","useState","modal2","setModal2","toggleModalPrimary","id","topHeader","setTopHeader","fetchTopHeaderData","a","Action","get","response","data","success","useEffect","console","log","text","file","button_text","link","body","setBody","put","_id","err","responsive","map","value","index","src","baseURL","image","height","width","className","color","size","caret","right","href","onClick","e","preventDefault","isOpen","toggle","modalClassName","sm","for","tag","FormGroup","addonType","type","onChange","target","placeholder","name","updateHeader","axios","create"],"mappings":"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","file":"static/js/93.39ecabfa.chunk.js","sourcesContent":["\r\nimport { useEffect, useState } from 'react'\r\nimport { MoreVertical, Edit, User } from 'react-feather'\r\nimport { BsFillMenuButtonFill } from 'react-icons/bs'\r\nimport { FaTextWidth } from 'react-icons/fa'\r\nimport { Card, CustomInput, Spinner, Form, Row, Col, Label, InputGroup, FormGroup, InputGroupAddon, InputGroupText, Input, CardTitle, CardBody, Table, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Button } from 'reactstrap'\r\nimport Action from '../../../middleware/API'\r\nimport baseURL from '../../../middleware/BaseURL'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Header = () => {\r\n  const [modal2, setModal2] = useState(null)\r\n  const toggleModalPrimary = id => {\r\n    if (modal2 !== id) {\r\n      setModal2(id)\r\n    } else {\r\n      setModal2(null)\r\n    }\r\n  }\r\n\r\n  //API INTEGRATION\r\n  //GET DATA\r\n  const [topHeader, setTopHeader] = useState([])\r\n  async function fetchTopHeaderData() {\r\n    const response = await Action.get(\"/topheader\", {})\r\n    if (response.data.success === true) {\r\n      setTopHeader(response.data.data)\r\n      // console.log(topHeader)\r\n    } else {\r\n      setTopHeader([])\r\n    }\r\n  }\r\n\r\n  useEffect(async () => {\r\n    fetchTopHeaderData()\r\n    console.log(topHeader)\r\n  }, [])\r\n\r\n  //UPDATE DATA \r\n  const [body, setBody] = useState({\r\n    text: \"\",\r\n    file: [],\r\n    button_text: \"\",\r\n    link: \"\"\r\n  })\r\n  async function updateHeader() {\r\n    const response = await Action.put(`/topheader/${topHeader[0]._id}`, body, {})\r\n    console.log(response)\r\n    if (response.data.success === true) {\r\n      console.log(response.data)\r\n    } else {\r\n      console.log(err)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle>Header</CardTitle>\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Text</th>\r\n                <th>Image</th>\r\n                <th>Button Text</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                topHeader.map((value, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        {value.text}\r\n                      </td>\r\n\r\n                      <td> <img src={baseURL + value.image} height=\"40\" width=\"40\" /></td>\r\n                      <td>{value.button_text}</td>\r\n                      <td>\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                            <MoreVertical size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem href='/' onClick={(e) => {\r\n                              e.preventDefault()\r\n                              toggleModalPrimary(value.id)\r\n                            }}>\r\n                              <Edit className='mr-50' size={15} /> <span className='align-middle'>Edit</span>\r\n                            </DropdownItem>\r\n\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                        <Modal\r\n                          isOpen={modal2 === value.id}\r\n                          toggle={() => toggleModalPrimary(value.id)}\r\n                          className='modal-dialog-centered'\r\n                          modalClassName=\"modal-primary\"\r\n                          key={value.id}>\r\n                          <ModalHeader toggle={() => toggleModalPrimary(value.id)}>Edit</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form>\r\n                              <Row>\r\n                                <Col sm='12' >\r\n                                  {/* color form */}\r\n                                  <Label for='text'>Header Text</Label>\r\n                                  <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                      <InputGroupText>\r\n                                        <FaTextWidth size={15} />\r\n                                      </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input type='text' id='text' onChange={(e) => {\r\n                                      setBody({ ...body, text: e.target.value })\r\n                                      console.log(e.target.value)\r\n                                    }\r\n                                    }\r\n                                      placeholder='Enter your text' />\r\n                                  </InputGroup>\r\n                                </Col>\r\n                                <Col sm='12'>\r\n                                  <FormGroup>\r\n                                    <Label for='icon'>Header Image</Label>\r\n                                    <CustomInput type='file' id='icon' onChange={(e) => {\r\n                                      setBody({ ...body, file: e.target.value })\r\n                                    }\r\n                                    }\r\n                                      name='customFile' />\r\n                                  </FormGroup>\r\n                                </Col>\r\n                                <Col sm='12' >\r\n                                  {/* color form */}\r\n                                  <Label for='btn'>Button Text</Label>\r\n                                  <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                      <InputGroupText>\r\n                                        <BsFillMenuButtonFill size={15} />\r\n                                      </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input type='text' id='btn' onChange={(e) => {\r\n                                      setBody({ ...body, button_text: e.target.value })\r\n                                    }\r\n                                    }\r\n                                      placeholder='Enter your button text' />\r\n                                  </InputGroup>\r\n                                </Col>\r\n                                <Col sm='12' >\r\n                                  {/* color form */}\r\n                                  <Label for='url'>Button Url</Label>\r\n                                  <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                      <InputGroupText>\r\n                                        <BsFillMenuButtonFill size={15} />\r\n                                      </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input type='text' id='url' onChange={(e) => {\r\n                                      setBody({ ...body, link: e.target.value })\r\n                                    }\r\n                                    }\r\n                                      placeholder='Enter your button link' />\r\n                                  </InputGroup>\r\n                                </Col>\r\n\r\n                              </Row>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n\r\n                            <Button color=\"primary\" onClick={() => updateHeader()}>\r\n                              Submit\r\n                              {/* spinner */}\r\n                              {/* <Spinner color='light' /> */}\r\n                            </Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\nexport default Header","\r\nimport axios from 'axios'\r\n\r\nexport default axios.create({\r\n    //baseURL: `http://localhost:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    baseURL: `https://nanybackend.herokuapp.com`\r\n})","//const baseURL = \"http://localhost:4000/\"\r\n// const baseURL = \"http://3.94.191.228:4000/\"\r\nconst baseURL = `https://nanybackend.herokuapp.com/image/`\r\nexport default baseURL"],"sourceRoot":""}