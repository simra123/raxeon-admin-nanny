{"version":3,"sources":["views/components/collapse/CollapseDefault.js","views/components/collapse/Accordion.js","views/components/collapse/AccordionShadow.js","views/components/collapse/AccordionBorder.js","views/components/collapse/AccordionMargin.js","views/components/collapse/AccordionHover.js","views/components/collapse/CollapseSourceCode.js","views/components/collapse/index.js","@core/components/breadcrumbs/index.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/CardText.js","@core/components/card-snippet/index.js","@core/components/app-collapse/index.js"],"names":["data","title","content","CardText","className","CollapseDefault","Accordion","accordion","AccordionShadow","type","AccordionBorder","AccordionMargin","AccordionHover","toggle","defaultCollapse","accordionShadow","accordionBorder","accordionMargin","accordionHover","Collapse","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","code","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","active","propTypes","tagPropType","inverse","PropTypes","bool","color","string","body","outline","cssModule","object","innerRef","oneOfType","func","Card","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardBody","rowColsPropType","number","noGutters","form","xs","md","lg","xl","widths","colClasses","forEach","colWidth","i","colSize","isXs","push","stringOrNumberProp","columnProps","shape","size","order","offset","array","getColumnSizeClass","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","length","CardTitle","CardHeader","listTag","listClassName","children","node","Breadcrumb","ListTag","label","listClasses","BreadcrumbItem","undefined","CardSnippet","noBody","iconCode","useState","isOpen","setIsOpen","IconCode","Wrapper","Fragment","onClick","AppCollapse","titleKey","contentKey","openCollapse","setOpenCollapse","handleCollapseToggle","id","arr","index","indexOf","includes","splice","classnames","map","item","collapsed","onMouseEnter"],"mappings":"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","file":"static/js/84.76a3d00e.chunk.js","sourcesContent":["import { CardText } from 'reactstrap'\r\nimport AppCollapse from '@components/app-collapse'\r\n\r\nconst data = [\r\n  {\r\n    title: 'Collapse Item 1',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie\r\n        cotton candy. Tootsie roll cotton candy pudding bonbon chocolate cake lemon drops candy. Jelly marshmallow\r\n        chocolate cake carrot cake bear claw ice cream chocolate. Fruitcake apple pie pudding jelly beans pie candy\r\n        canes candy canes jelly-o. Tiramisu brownie gummi bears soufflé dessert cake.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Collapse Item 2',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar\r\n        plum. Pudding carrot cake sweet roll marzipan I love jujubes. Sweet roll tart sugar plum halvah donut. Cake\r\n        gingerbread tart. Tootsie roll soufflé danish powder marshmallow sugar plum halvah sweet chocolate bar. Jujubes\r\n        cupcake I love toffee biscuit.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Collapse Item 3',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake\r\n        bonbon cake. Sweet roll fruitcake bear claw soufflé. Apple pie ice cream liquorice sesame snaps brownie. Donut\r\n        marshmallow donut pudding chupa chups.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Collapse Item 4',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée\r\n        tootsie roll. Cookie caramels tootsie roll pie. Sesame snaps cookie cake donut wafer. Wafer cookie jelly-o candy\r\n        muffin cake. Marzipan topping lollipop. Gummies chocolate sugar plum.\r\n      </CardText>\r\n    )\r\n  }\r\n]\r\n\r\nconst CollapseDefault = () => <AppCollapse data={data} />\r\n\r\nexport default CollapseDefault\r\n","import { CardText } from 'reactstrap'\r\nimport AppCollapse from '@components/app-collapse'\r\n\r\nconst data = [\r\n  {\r\n    title: 'Accordion Item 1',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\r\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\r\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\r\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\r\n        cheesecake liquorice apple pie.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 2',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\r\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\r\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\r\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 3',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\r\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\r\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\r\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 4',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\r\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\r\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\r\n      </CardText>\r\n    )\r\n  }\r\n]\r\n\r\nconst Accordion = () => <AppCollapse data={data} accordion />\r\n\r\nexport default Accordion\r\n","import { CardText } from 'reactstrap'\r\nimport AppCollapse from '@components/app-collapse'\r\n\r\nconst data = [\r\n  {\r\n    title: 'Accordion Item 1',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\r\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\r\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\r\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\r\n        cheesecake liquorice apple pie.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 2',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\r\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\r\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\r\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 3',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\r\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\r\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\r\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 4',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\r\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\r\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\r\n      </CardText>\r\n    )\r\n  }\r\n]\r\n\r\nconst AccordionShadow = () => <AppCollapse data={data} type='shadow' accordion />\r\n\r\nexport default AccordionShadow\r\n","import { CardText } from 'reactstrap'\r\nimport AppCollapse from '@components/app-collapse'\r\n\r\nconst data = [\r\n  {\r\n    title: 'Accordion Item 1',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\r\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\r\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\r\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\r\n        cheesecake liquorice apple pie.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 2',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\r\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\r\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\r\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 3',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\r\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\r\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\r\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 4',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\r\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\r\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\r\n      </CardText>\r\n    )\r\n  }\r\n]\r\n\r\nconst AccordionBorder = () => <AppCollapse data={data} type='border' accordion />\r\n\r\nexport default AccordionBorder\r\n","import { CardText } from 'reactstrap'\r\nimport AppCollapse from '@components/app-collapse'\r\n\r\nconst data = [\r\n  {\r\n    title: 'Accordion Item 1',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\r\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\r\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\r\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\r\n        cheesecake liquorice apple pie.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 2',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\r\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\r\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\r\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 3',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\r\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\r\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\r\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 4',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\r\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\r\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\r\n      </CardText>\r\n    )\r\n  }\r\n]\r\n\r\nconst AccordionMargin = () => <AppCollapse data={data} type='margin' accordion />\r\n\r\nexport default AccordionMargin\r\n","import { CardText } from 'reactstrap'\r\nimport AppCollapse from '@components/app-collapse'\r\n\r\nconst data = [\r\n  {\r\n    title: 'Accordion Item 1',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\r\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\r\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\r\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\r\n        cheesecake liquorice apple pie.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 2',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\r\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\r\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\r\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 3',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\r\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\r\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\r\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\r\n      </CardText>\r\n    )\r\n  },\r\n  {\r\n    title: 'Accordion Item 4',\r\n    content: (\r\n      <CardText className='mb-0'>\r\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\r\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\r\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\r\n      </CardText>\r\n    )\r\n  }\r\n]\r\n\r\nconst AccordionHover = () => <AppCollapse data={data} toggle='hover' accordion />\r\n\r\nexport default AccordionHover\r\n","export const defaultCollapse = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { CardText } from 'reactstrap'\nimport AppCollapse from '@components/app-collapse'\n\nconst data = [\n  {\n    title: 'Collapse Item 1',\n    content: (\n      <CardText className='mb-0'>\n        Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie\n        cotton candy. Tootsie roll cotton candy pudding bonbon chocolate cake lemon drops candy. Jelly marshmallow\n        chocolate cake carrot cake bear claw ice cream chocolate. Fruitcake apple pie pudding jelly beans pie candy\n        canes candy canes jelly-o. Tiramisu brownie gummi bears soufflé dessert cake.\n      </CardText>\n    )\n  },\n  {\n    title: 'Collapse Item 2',\n    content: (\n      <CardText className='mb-0'>\n        Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar\n        plum. Pudding carrot cake sweet roll marzipan I love jujubes. Sweet roll tart sugar plum halvah donut. Cake\n        gingerbread tart. Tootsie roll soufflé danish powder marshmallow sugar plum halvah sweet chocolate bar. Jujubes\n        cupcake I love toffee biscuit.\n      </CardText>\n    )\n  },\n  {\n    title: 'Collapse Item 3',\n    content: (\n      <CardText className='mb-0'>\n        Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake\n        bonbon cake. Sweet roll fruitcake bear claw soufflé. Apple pie ice cream liquorice sesame snaps brownie. Donut\n        marshmallow donut pudding chupa chups.\n      </CardText>\n    )\n  },\n  {\n    title: 'Collapse Item 4',\n    content: (\n      <CardText className='mb-0'>\n        Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée\n        tootsie roll. Cookie caramels tootsie roll pie. Sesame snaps cookie cake donut wafer. Wafer cookie jelly-o candy\n        muffin cake. Marzipan topping lollipop. Gummies chocolate sugar plum.\n      </CardText>\n    )\n  }\n]\n\nconst CollapseDefault = () => <AppCollapse data={data} />\n\nexport default CollapseDefault\n`}\n    </code>\n  </pre>\n)\n\nexport const accordion = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { CardText } from 'reactstrap'\nimport AppCollapse from '@components/app-collapse'\n\nconst data = [\n  {\n    title: 'Accordion Item 1',\n    content: (\n      <CardText className='mb-0'>\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\n        cheesecake liquorice apple pie.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 2',\n    content: (\n      <CardText className='mb-0'>\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 3',\n    content: (\n      <CardText className='mb-0'>\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 4',\n    content: (\n      <CardText className='mb-0'>\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\n      </CardText>\n    )\n  }\n]\n\nconst Accordion = () => <AppCollapse data={data} accordion />\n\nexport default Accordion\n`}\n    </code>\n  </pre>\n)\n\nexport const accordionShadow = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { CardText } from 'reactstrap'\nimport AppCollapse from '@components/app-collapse'\n\nconst data = [\n  {\n    title: 'Accordion Item 1',\n    content: (\n      <CardText className='mb-0'>\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\n        cheesecake liquorice apple pie.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 2',\n    content: (\n      <CardText className='mb-0'>\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 3',\n    content: (\n      <CardText className='mb-0'>\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 4',\n    content: (\n      <CardText className='mb-0'>\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\n      </CardText>\n    )\n  }\n]\n\nconst AccordionShadow = () => <AppCollapse data={data} type='shadow' accordion />\n\nexport default AccordionShadow`}\n    </code>\n  </pre>\n)\n\nexport const accordionBorder = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { CardText } from 'reactstrap'\nimport AppCollapse from '@components/app-collapse'\n\nconst data = [\n  {\n    title: 'Accordion Item 1',\n    content: (\n      <CardText className='mb-0'>\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\n        cheesecake liquorice apple pie.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 2',\n    content: (\n      <CardText className='mb-0'>\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 3',\n    content: (\n      <CardText className='mb-0'>\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 4',\n    content: (\n      <CardText className='mb-0'>\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\n      </CardText>\n    )\n  }\n]\n\nconst AccordionBorder = () => <AppCollapse data={data} type='border' accordion />\n\nexport default AccordionBorder`}\n    </code>\n  </pre>\n)\n\nexport const accordionMargin = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { CardText } from 'reactstrap'\nimport AppCollapse from '@components/app-collapse'\n\nconst data = [\n  {\n    title: 'Accordion Item 1',\n    content: (\n      <CardText className='mb-0'>\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\n        cheesecake liquorice apple pie.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 2',\n    content: (\n      <CardText className='mb-0'>\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 3',\n    content: (\n      <CardText className='mb-0'>\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 4',\n    content: (\n      <CardText className='mb-0'>\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\n      </CardText>\n    )\n  }\n]\n\nconst AccordionMargin = () => <AppCollapse data={data} type='margin' accordion />\n\nexport default AccordionMargin\n`}\n    </code>\n  </pre>\n)\n\nexport const accordionHover = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { CardText } from 'reactstrap'\nimport AppCollapse from '@components/app-collapse'\n\nconst data = [\n  {\n    title: 'Accordion Item 1',\n    content: (\n      <CardText className='mb-0'>\n        Cheesecake cotton candy bonbon muffin cupcake tiramisu croissant. Tootsie roll sweet candy bear claw chupa chups\n        lollipop toffee. Macaroon donut liquorice powder candy carrot cake macaroon fruitcake. Cookie toffee lollipop\n        cotton candy ice cream dragée soufflé. Cake tiramisu lollipop wafer pie soufflé dessert tart. Biscuit ice cream\n        pie apple pie topping oat cake dessert. Soufflé icing caramels. Chocolate cake icing ice cream macaroon pie\n        cheesecake liquorice apple pie.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 2',\n    content: (\n      <CardText className='mb-0'>\n        Pie pudding candy. Oat cake jelly beans bear claw lollipop. Ice cream candy canes tootsie roll muffin powder\n        donut powder. Topping candy canes chocolate bar lemon drops candy canes. Halvah muffin marzipan powder sugar\n        plum donut donut cotton candy biscuit. Wafer jujubes apple pie sweet lemon drops jelly cupcake. Caramels dessert\n        halvah marshmallow. Candy topping cotton candy oat cake croissant halvah gummi bears toffee powder.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 3',\n    content: (\n      <CardText className='mb-0'>\n        Gingerbread liquorice liquorice cake muffin lollipop powder chocolate cake. Gummi bears lemon drops toffee\n        liquorice pastry cake caramels chocolate bar brownie. Sweet biscuit chupa chups sweet. Halvah fruitcake\n        gingerbread croissant dessert cupcake. Chupa chups chocolate bar donut tart. Donut cake dessert cookie. Ice\n        cream tootsie roll powder chupa chups pastry cupcake soufflé.\n      </CardText>\n    )\n  },\n  {\n    title: 'Accordion Item 4',\n    content: (\n      <CardText className='mb-0'>\n        Icing sweet roll cotton candy brownie candy canes candy canes. Pie jelly dragée pie. Ice cream jujubes wafer.\n        Wafer croissant carrot cake wafer gummies gummies chupa chups halvah bonbon. Gummi bears cotton candy jelly-o\n        halvah. Macaroon apple pie dragée bonbon marzipan cheesecake. Jelly jelly beans marshmallow.\n      </CardText>\n    )\n  }\n]\n\nconst AccordionHover = () => <AppCollapse data={data} toggle='hover' accordion />\n\nexport default AccordionHover\n\n`}\n    </code>\n  </pre>\n)\n","import { Fragment, useEffect } from 'react'\r\nimport { Row, Col, CardText } from 'reactstrap'\r\nimport Prism from 'prismjs'\r\nimport CollapseDefault from './CollapseDefault'\r\nimport Accordion from './Accordion'\r\nimport AccordionShadow from './AccordionShadow'\r\nimport AccordionBorder from './AccordionBorder'\r\nimport AccordionMargin from './AccordionMargin'\r\nimport AccordionHover from './AccordionHover'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nimport Card from '@components/card-snippet'\r\nimport {\r\n  defaultCollapse,\r\n  accordion,\r\n  accordionBorder,\r\n  accordionHover,\r\n  accordionMargin,\r\n  accordionShadow\r\n} from './CollapseSourceCode'\r\n\r\nconst Collapse = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Collapse' breadCrumbParent='Components' breadCrumbActive='Collapse' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Collapse Default' code={defaultCollapse}>\r\n            <CollapseDefault />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Accordion' code={accordion}>\r\n            <CardText>\r\n              You may want to open one item at a time for that you can use prop <code>accordion</code>.\r\n            </CardText>\r\n            <Accordion />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Accordion Shadow' code={accordionShadow}>\r\n            <CardText>\r\n              Use prop <code>type='shadow'</code> to create collapse/accordion with shadow.\r\n            </CardText>\r\n            <AccordionShadow />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Accordion Border' code={accordionBorder}>\r\n            <CardText>\r\n              Use prop <code>type='border'</code> to create collapse/accordion with border.\r\n            </CardText>\r\n            <AccordionBorder />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Accordion Margin' code={accordionMargin}>\r\n            <CardText>\r\n              Use prop <code>type='margin'</code> to create collapse/accordion with margin.\r\n            </CardText>\r\n            <AccordionMargin />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Accordion Hover' code={accordionHover}>\r\n            <CardText>\r\n              Use prop <code>toggle='hover'</code> to create hoverable collapse/accordion.\r\n            </CardText>\r\n            <AccordionHover />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Collapse\r\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>*/}\n    </div> \n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any,\n  code: PropTypes.node,\n  iconCode: PropTypes.node,\n  noBody: PropTypes.bool\n}\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { ChevronUp } from 'react-feather'\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\n\nconst AppCollapse = props => {\n  // ** Props\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\n\n  /**\n   ** If accordion is true then return only one active index else return an Array\n   */\n  const defaultActive = () => {\n    if (accordion) {\n      return active\n    } else {\n      return [...active]\n    }\n  }\n\n  // ** State\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\n\n  // ** Function to handle Collapse Toggle\n  const handleCollapseToggle = id => {\n    if (accordion) {\n      if (id === openCollapse) {\n        setOpenCollapse(null)\n      } else {\n        setOpenCollapse(id)\n      }\n    } else {\n      const arr = openCollapse,\n        index = arr.indexOf(id)\n      if (arr.includes(id)) {\n        arr.splice(index, 1)\n        setOpenCollapse([...arr])\n      } else {\n        arr.push(id)\n        setOpenCollapse([...arr])\n      }\n    }\n  }\n\n  // ** Function to render collapse\n  const renderData = () => {\n    return data.map((item, index) => {\n      const title = titleKey ? item[titleKey] : item.title,\n        content = contentKey ? item[contentKey] : item.content\n\n      return (\n        <Card\n          className={classnames('app-collapse', {\n            [item.className]: item.className,\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\n          })}\n          key={index}\n        >\n          <CardHeader\n            className={classnames('align-items-center', {\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\n            })}\n            /*eslint-disable */\n            {...(toggle === 'hover'\n              ? {\n                  onMouseEnter: () => handleCollapseToggle(index)\n                }\n              : {\n                  onClick: () => handleCollapseToggle(index)\n                })}\n            /*eslint-enable */\n          >\n            <CardTitle className='collapse-title'>{title}</CardTitle>\n            <ChevronUp size={14} />\n          </CardHeader>\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\n            <CardBody>{content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={classnames('collapse-icon', {\n        [className]: className,\n        'collapse-default': !type,\n        'collapse-shadow': type === 'shadow',\n        'collapse-border': type === 'border',\n        'collapse-margin': type === 'margin'\n      })}\n    >\n      {renderData()}\n    </div>\n  )\n}\n\nexport default AppCollapse\n\n// ** PropTypes\nAppCollapse.propTypes = {\n  data: Proptypes.array.isRequired,\n  accordion: Proptypes.bool,\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\n  titleKey: Proptypes.string,\n  contentKey: Proptypes.string,\n  className: Proptypes.string\n}\n\n// ** Default Props\nAppCollapse.defaultProps = {\n  active: [],\n  toggle: 'click'\n}\n"],"sourceRoot":""}