{"version":3,"sources":["views/attribute/Value.js"],"names":["attributeValues","id","value","name","attributeNames","label","ServiceForm","useState","modal","setModal","modal2","setModal2","toggleModalDanger","toggleModalPrimary","tag","sm","md","for","className","FormGroup","addonType","size","type","placeholder","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","Ripple","color","onClick","e","preventDefault","responsive","map","index","caret","right","href","isOpen","toggle","modalClassName"],"mappings":"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","file":"static/js/171.cbe1fa85.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport '../../@core/scss/react/libs/editor/editor.scss'\r\nimport '../../@core/scss/react/libs/file-uploader/file-uploader.scss'\r\nimport 'uppy/dist/uppy.css'\r\nimport { MoreVertical, Edit, Trash, User } from 'react-feather'\r\nimport { selectThemeColors } from '@utils'\r\nimport Select from 'react-select'\r\nimport {CgAttribution} from 'react-icons/cg'\r\nimport {  Card, CardHeader, Form, Row, Col, Label, InputGroup, FormGroup, InputGroupAddon, InputGroupText, Input, CardTitle, CardBody, Table,  Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Button } from 'reactstrap'\r\n\r\n  const attributeValues = [\r\n    {   id:0,\r\n        value : 'value',\r\n        name : 'Ocean'\r\n    },\r\n    {\r\n        id:1,\r\n        value : 'value',\r\n        name : 'Purple'\r\n    }\r\n  \r\n  \r\n]\r\nconst attributeNames = [\r\n    { value: 'ocean', label: 'Ocean' },\r\n    { value: 'blue', label: 'Blue' },\r\n    { value: 'purple', label: 'Purple' },\r\n    { value: 'red', label: 'Red' },\r\n    { value: 'orange', label: 'Orange' }\r\n  ]\r\n  const ServiceForm = () => {\r\n    const [modal, setModal] = useState(null)\r\n    const [modal2, setModal2] = useState(null)\r\n\r\n    const toggleModalDanger = id => {\r\n      if (modal !== id) {\r\n        setModal(id)\r\n      } else {\r\n        setModal(null)\r\n      }\r\n    }\r\n    const toggleModalPrimary = id => {\r\n        if (modal2 !== id) {\r\n          setModal2(id)\r\n        } else {\r\n          setModal2(null)\r\n        }\r\n      }\r\n    return (\r\n        <>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Add New Attribute Value</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Form>\r\n            <Row>\r\n              <Col sm='12' md=\"6\">\r\n                    {/* value form */}\r\n                    <Label for='att-name'>Attribute Value</Label>\r\n                    <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                    <InputGroupAddon addonType='prepend'>\r\n                        <InputGroupText>\r\n                        <CgAttribution size={15} />\r\n                        </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input type='text' name='name' id='att-name' placeholder='Enter your Attibute name' />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col className='mb-1' md='6' sm='12'>\r\n                <Label>Attribute Name</Label>\r\n                <Select\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                defaultValue={attributeNames[0]}\r\n                options={attributeNames}\r\n                isClearable={false}\r\n                />\r\n                </Col>\r\n                <Col sm='12' className=\"\">\r\n                <FormGroup className='d-flex mb-0'>\r\n                    <Button.Ripple className='mr-1' color='primary' type='submit' onClick={e => e.preventDefault()}>\r\n                    Submit\r\n                    </Button.Ripple>\r\n                </FormGroup>\r\n                </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n      <CardBody>\r\n      <CardTitle>All Attribute Values</CardTitle>\r\n\r\n    <Table responsive>\r\n      <thead>\r\n        <tr>\r\n          <th>Attribute Value</th>\r\n          <th>Attribute Name</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      {\r\n          attributeValues.map((value, index) => {\r\n              return (\r\n              <tr key={index}>\r\n              <td>\r\n                {value.value}\r\n              </td>\r\n      \r\n              <td>{value.name}</td>\r\n                <td>\r\n                  <UncontrolledDropdown>\r\n                  <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                      <MoreVertical size={15} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                      <DropdownItem href='/'  onClick={(e) => { \r\n                        e.preventDefault()  \r\n                        toggleModalPrimary(value.id) \r\n                        }}>\r\n                      <Edit className='mr-50' size={15} />  <span className='align-middle'>Edit</span>\r\n                      </DropdownItem>\r\n\r\n                      <DropdownItem href='/' onClick={(e) => { \r\n                        e.preventDefault()  \r\n                        toggleModalDanger(value.id) \r\n                        }}>\r\n                      <Trash className='mr-50' size={15} /> <span className='align-middle'>Delete</span>\r\n                      </DropdownItem>\r\n                  </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <Modal\r\n                    isOpen={modal2 === value.id}\r\n                    toggle={() => toggleModalPrimary(value.id)}\r\n                    className='modal-dialog-centered'\r\n                    modalClassName=\"modal-primary\"\r\n                    key={value.id}>\r\n                    <ModalHeader toggle={() => toggleModalPrimary(value.id)}>Edit</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <Row>\r\n                                \r\n                                <Col className='mb-1' md='6' sm='12'>\r\n                                    <Label>Attribute Name</Label>\r\n                                    <Select\r\n                                    theme={selectThemeColors}\r\n                                    className='react-select'\r\n                                    classNamePrefix='select'\r\n                                    defaultValue={attributeNames[0]}\r\n                                    options={attributeNames}\r\n                                    isClearable={false}\r\n                                    />\r\n                                </Col>\r\n                                <Col sm='12' md=\"6\">\r\n                                    {/* value form */}\r\n                                    <Label for='att-name'>Attribute Value</Label>\r\n                                    <InputGroup className='input-group-merge' tag={FormGroup}>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                        <InputGroupText>\r\n                                        <CgAttribution size={15} />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input type='text' name='name' id='att-name' placeholder='Enter your Attibute name' />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                                   \r\n                            </Row>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                            \r\n                      <Button color=\"primary\" onClick={() => toggleModalPrimary(value.id)}>\r\n                        Submit\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  {/* delete modal */}\r\n                  <Modal\r\n                    isOpen={modal === value.id}\r\n                    toggle={() => toggleModalDanger(value.id)}\r\n                    className='modal-dialog-centered'\r\n                    modalClassName=\"modal-danger\"\r\n                    key={value.id}>\r\n                    <ModalHeader toggle={() => toggleModalDanger(value.id)}>Delete</ModalHeader>\r\n                    <ModalBody>\r\n                    Are you sure you want to delete this?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button color=\"danger\" onClick={() => toggleModalDanger(value.id)}>\r\n                        delete\r\n                      </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n              </td>\r\n              </tr>\r\n              )\r\n          })\r\n      }\r\n     \r\n      \r\n    </tbody>\r\n  </Table>\r\n  </CardBody>\r\n  </Card>\r\n  </>\r\n    )\r\n  }\r\n  export default ServiceForm\r\n  "],"sourceRoot":""}