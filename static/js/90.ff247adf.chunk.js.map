{"version":3,"sources":["views/components/dropdowns/DropdownControlled.js","views/components/dropdowns/DropdownUncontrolled.js","views/components/dropdowns/DropdownBasic.js","views/components/dropdowns/DropdownSplit.js","views/components/dropdowns/DropdownOutline.js","views/components/dropdowns/DropdownFlat.js","views/components/dropdowns/DropdownGradient.js","views/components/dropdowns/DropdownSizes.js","views/components/dropdowns/DropdownDirections.js","views/components/dropdowns/DropdownVariations.js","views/components/dropdowns/DropdownsSourceCode.js","views/components/dropdowns/index.js","@core/components/breadcrumbs/index.js","../node_modules/reactstrap/es/ButtonDropdown.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/UncontrolledButtonDropdown.js","@core/components/card-snippet/index.js"],"names":["DropdownControlled","useState","dropdownOpen","setDropdownOpen","ButtonDropdown","isOpen","toggle","DropdownToggle","color","caret","DropdownMenu","DropdownItem","href","tag","disabled","DropdownUncontrolled","UncontrolledButtonDropdown","DropdownBasic","className","DropdownSplit","Button","right","divider","header","DropdownOutline","outline","DropdownFlat","DropdownGradient","DropdownSizes","Row","Col","md","sm","size","DropdownDirections","direction","icons","id","item","DropdownVariations","formDropdown","setFormDropdown","activeIcon","setActiveIcon","renderIconItem","map","icon","onClick","toggleIcon","Form","onSubmit","e","preventDefault","FormGroup","Label","for","Input","type","placeholder","name","CustomInput","label","dropdownControlled","dropdownUncontrolled","dropdownBasic","dropdownSplit","dropdownOutline","dropdownFlat","dropdownGradient","dropdownSizes","dropdownDirections","dropdownVariations","Dropdowns","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","title","code","CardText","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","to","active","Link","propTypes","children","PropTypes","node","React","createElement","Dropdown","_extends","group","tagPropType","inverse","bool","string","body","cssModule","object","innerRef","oneOfType","func","Card","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","ref","defaultProps","CardBody","CardHeader","listTag","listClassName","Breadcrumb","ListTag","listClasses","BreadcrumbItem","undefined","ownKeys","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","omitKeys","_Component","_this","call","this","state","defaultOpen","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","setState","render","omit","Component","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","CardSnippet","noBody","iconCode","setIsOpen","IconCode","Wrapper","Fragment"],"mappings":"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","file":"static/js/90.ff247adf.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nconst DropdownControlled = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n\n  return (\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n      <DropdownToggle color='primary' caret>\n        Controlled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a'>\n          Option 1\n        </DropdownItem>\n        <DropdownItem href='/' tag='a' disabled>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a'>\n          Option 3\n        </DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  )\n}\nexport default DropdownControlled\n","import { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nconst DropdownUncontrolled = () => {\r\n  return (\r\n    <UncontrolledButtonDropdown>\r\n      <DropdownToggle color='primary' caret>\r\n        Uncontrolled\r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem href='/' tag='a'>\r\n          Option 1\r\n        </DropdownItem>\r\n        <DropdownItem href='/' tag='a' disabled>\r\n          Option 2\r\n        </DropdownItem>\r\n        <DropdownItem href='/' tag='a'>\r\n          Option 3\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledButtonDropdown>\r\n  )\r\n}\r\nexport default DropdownUncontrolled\r\n","import { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nconst DropdownBasic = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='primary' caret>\r\n          Primary\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='secondary' caret>\r\n          Secondary\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='success' caret>\r\n          Success\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='danger' caret>\r\n          Danger\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='warning' caret>\r\n          Warning\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='info' caret>\r\n          Info\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='dark' caret>\r\n          Dark\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownBasic\r\n","import { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownSplit = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <Button color='primary'>Primary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='secondary'>Secondary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='success'>Success</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='success' caret></DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem header>Header</DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='danger'>Danger</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='danger' caret></DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='warning'>Warning</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='info'>Info</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='info' caret></DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='dark'>Dark</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='dark' caret></DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownSplit\n","import { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nconst DropdownOutline = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle outline color='primary' caret>\r\n          Primary\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n          <DropdownItem divider></DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Separated Link\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <Button outline color='secondary'>\r\n          Secondary\r\n        </Button>\r\n        <DropdownToggle outline className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n          <DropdownItem divider></DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Separated Link\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle outline color='success' caret>\r\n          Success\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n          <DropdownItem divider></DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Separated Link\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle outline color='danger' caret>\r\n          Danger\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n          <DropdownItem divider></DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Separated Link\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <Button outline color='warning'>\r\n          Warning\r\n        </Button>\r\n        <DropdownToggle outline className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n          <DropdownItem divider></DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Separated Link\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle outline color='info' caret>\r\n          Info\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n          <DropdownItem divider></DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Separated Link\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownOutline\r\n","import { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nconst DropdownFlat = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='flat-primary' caret>\r\n          Primary\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='flat-secondary' caret>\r\n          Secondary\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='flat-success' caret>\r\n          Success\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='flat-danger' caret>\r\n          Danger\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='flat-warning' caret>\r\n          Warning\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='flat-info' caret>\r\n          Info\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='flat-dark' caret>\r\n          Dark\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownFlat\r\n","import { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nconst DropdownGradient = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle className='btn-gradient-primary' color='none' caret>\r\n          Primary\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle className='btn-gradient-secondary' color='none' caret>\r\n          Secondary\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle className='btn-gradient-success' color='none' caret>\r\n          Success\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle className='btn-gradient-danger' color='none' caret>\r\n          Danger\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle className='btn-gradient-warning' color='none' caret>\r\n          Warning\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle className='btn-gradient-info' color='none' caret>\r\n          Info\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle className='btn-gradient-dark' color='none' caret>\r\n          Dark\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n    </div>\r\n  )\r\n}\r\nexport default DropdownGradient\r\n","import { Fragment } from 'react'\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle, Row, Col } from 'reactstrap'\n\nconst DropdownSizes = () => {\n  return (\n    <Fragment>\n      <Row>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='lg' caret>\n                Large\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' caret>\n                Default\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='sm' caret>\n                Small\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='lg'>\n                Large\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret size='lg'></DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem href='/' tag='a'>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary'>Default</Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem href='/' tag='a'>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='sm'>\n                Small\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem href='/' tag='a'>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a'>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default DropdownSizes\n","import { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nconst DropdownDirections = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <UncontrolledButtonDropdown>\r\n        <DropdownToggle color='primary' caret>\r\n          Drop bottom right\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown direction='up'>\r\n        <DropdownToggle color='primary' caret>\r\n          Drop Up\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown direction='right'>\r\n        <DropdownToggle color='primary' caret>\r\n          Drop Right\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown direction='left'>\r\n        <DropdownToggle color='primary' caret>\r\n          Drop Left\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 3\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n    </div>\r\n  )\r\n}\r\nexport default DropdownDirections\r\n","import { useState } from 'react'\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  ButtonDropdown,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\nimport { Wifi, WifiOff, PhoneOff, BellOff, Bell, VolumeX, Volume2 } from 'react-feather'\r\n\r\nconst icons = [\r\n  {\r\n    id: 1,\r\n    item: <WifiOff size={15} />\r\n  },\r\n  {\r\n    id: 2,\r\n    item: <VolumeX size={15} />\r\n  },\r\n  {\r\n    id: 3,\r\n    item: <Volume2 size={15} />\r\n  },\r\n  {\r\n    id: 4,\r\n    item: <Bell size={15} />\r\n  },\r\n  {\r\n    id: 5,\r\n    item: <BellOff size={15} />\r\n  },\r\n  {\r\n    id: 6,\r\n    item: <PhoneOff size={15} />\r\n  }\r\n]\r\n\r\nconst DropdownVariations = () => {\r\n  const [formDropdown, setFormDropdown] = useState(false)\r\n  const [activeIcon, setActiveIcon] = useState(<Wifi size={15} />)\r\n\r\n  const toggleIcon = icon => setActiveIcon(icon)\r\n  const toggleFormDropdown = () => setFormDropdown(!formDropdown)\r\n\r\n  const renderIconItem = icons.map(icon => {\r\n    return (\r\n      <DropdownItem tag='span' key={icon.id} onClick={() => toggleIcon(icon.item)}>\r\n        {icon.item}\r\n      </DropdownItem>\r\n    )\r\n  })\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <UncontrolledButtonDropdown direction='up'>\r\n        <DropdownToggle color='primary' caret>\r\n          Group\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem href='/' tag='a' header>\r\n            Group 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem href='/' tag='a' header>\r\n            Group 2\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem href='/' tag='a' header>\r\n            Group 3\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 1\r\n          </DropdownItem>\r\n          <DropdownItem href='/' tag='a'>\r\n            Option 2\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <UncontrolledButtonDropdown className='dropdown-icon-wrapper' direction='up'>\r\n        <Button color='primary'>Icons</Button>\r\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret>\r\n          {activeIcon}\r\n        </DropdownToggle>\r\n        <DropdownMenu tag='div' right>\r\n          {renderIconItem}\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n\r\n      <ButtonDropdown isOpen={formDropdown} toggle={toggleFormDropdown} direction='up'>\r\n        <DropdownToggle color='primary' caret>\r\n          Form\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <Form\r\n            className='px-2 py-2'\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              setFormDropdown(false)\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <Label for='ddEmail'>Email</Label>\r\n              <Input type='email' placeholder='Email' name='ddemail' id='ddEmail' />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for='ddPassword'>Password</Label>\r\n              <Input type='password' placeholder='Password' name='ddPassword' id='ddPassword' />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <CustomInput type='checkbox' name='ddCheck' id='ddCheck' label='Remember Me' />\r\n            </FormGroup>\r\n            <Button color='primary' type='submit'>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          <DropdownItem divider />\r\n          <DropdownItem\r\n            href='/'\r\n            tag='a'\r\n            href='#'\r\n            onClick={e => {\r\n              e.preventDefault()\r\n              setFormDropdown(false)\r\n            }}\r\n          >\r\n            New around here? Sign up\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            href='/'\r\n            tag='a'\r\n            href='#'\r\n            onClick={e => {\r\n              e.preventDefault()\r\n              setFormDropdown(false)\r\n            }}\r\n          >\r\n            Forgot password?\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </ButtonDropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropdownVariations\r\n","export const dropdownControlled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nconst DropdownControlled = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\nconst toggleDropdown = () => {\n  setDropdownOpen(!dropdownOpen)\n}\n\n  return (\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n      <DropdownToggle color='primary' caret>\n        Controlled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n        <DropdownItem href='/' tag='a' disabled>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  )\n}\nexport default DropdownControlled`}\n    </code>\n  </pre>\n)\n\nexport const dropdownUncontrolled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownUncontrolled = () => {\n  return (\n    <UncontrolledButtonDropdown>\n      <DropdownToggle color='primary' caret>\n        Uncontrolled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n        <DropdownItem href='/' tag='a' disabled>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n      </DropdownMenu>\n    </UncontrolledButtonDropdown>\n  )\n}\nexport default DropdownUncontrolled`}\n    </code>\n  </pre>\n)\n\nexport const dropdownBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownBasic = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownBasic`}\n    </code>\n  </pre>\n)\n\nexport const dropdownSplit = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownSplit = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <Button color='primary'>Primary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='secondary'>Secondary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='success'>Success</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='success' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='warning'>Warning</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='danger'>Danger</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='danger' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='info'>Info</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='info' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='dark'>Dark</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='dark' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownSplit`}\n    </code>\n  </pre>\n)\n\nexport const dropdownOutline = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownOutline = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='secondary'>\n          Secondary\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='warning'>\n          Warning\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownOutline`}\n    </code>\n  </pre>\n)\n\nexport const dropdownFlat = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownFlat = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownFlat`}\n    </code>\n  </pre>\n)\n\nexport const dropdownGradient = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownGradient = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-primary' color='none' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-secondary' color='none' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-success' color='none' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-warning' color='none' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-danger' color='none' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-info' color='none' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-dark' color='none' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownGradient`}\n    </code>\n  </pre>\n)\n\nexport const dropdownSizes = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle, Row, Col } from 'reactstrap'\n\nconst DropdownSizes = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='lg' caret>\n                Large\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' caret>\n                Default\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='sm' caret>\n                Small\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='lg'>\n                Large\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret size='lg'></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary'>Default</Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='sm'>\n                Small\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n      </Row>\n    </React.Fragment>\n  )\n}\nexport default DropdownSizes`}\n    </code>\n  </pre>\n)\n\nexport const dropdownDirections = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownDirections = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Drop bottom right\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Drop Up\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='right'>\n        <DropdownToggle color='primary' caret>\n          Drop Right\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='left'>\n        <DropdownToggle color='primary' caret>\n          Drop Left\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownDirections`}\n    </code>\n  </pre>\n)\n\nexport const dropdownVariations = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\nimport { Wifi, WifiOff, PhoneOff, BellOff, Bell, VolumeX, Volume2 } from 'react-feather'\n\nconst icons = [\n  {\n    id: 1,\n    item: <WifiOff size={15} />\n  },\n  {\n    id: 2,\n    item: <VolumeX size={15} />\n  },\n  {\n    id: 3,\n    item: <Volume2 size={15} />\n  },\n  {\n    id: 4,\n    item: <Bell size={15} />\n  },\n  {\n    id: 5,\n    item: <BellOff size={15} />\n  },\n  {\n    id: 6,\n    item: <PhoneOff size={15} />\n  }\n]\n\nconst DropdownVariations = () => {\n  const [activeIcon, setActiveIcon] = useState(<Wifi size={15} />)\n\n  const toggleIcon = icon => {\n    setActiveIcon(icon)\n  }\n\n  const renderIconItem = icons.map(icon => {\n    return (\n      <DropdownItem tag='li' key={icon.id} onClick={() => toggleIcon(icon.item)}>\n        {icon.item}\n      </DropdownItem>\n    )\n  })\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Group\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' header>\n            Group 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header>\n            Group 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header>\n            Group 3\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown className='dropdown-icon-wrapper' direction='up'>\n        <Button color='primary'>Icons</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret>\n          {activeIcon}\n        </DropdownToggle>\n        <DropdownMenu tag='ul' right>\n          {renderIconItem}\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Form\n        </DropdownToggle>\n        <DropdownMenu>\n          <Form className='px-2 py-2'>\n            <FormGroup>\n              <Label for='ddEmail'>Email</Label>\n              <Input type='email' placeholder='Email' name='ddemail' id='ddEmail' />\n            </FormGroup>\n            <FormGroup>\n              <Label for='ddPassword'>Password</Label>\n              <Input type='password' placeholder='Password' name='ddPassword' id='ddPassword' />\n            </FormGroup>\n            <FormGroup>\n              <Input type='checkbox' name='ddCheck' id='ddCheck' />\n              <Label for='ddCheck'>Remember Me</Label>\n            </FormGroup>\n            <Button color='primary' type='submit'>\n              Submit\n            </Button>\n          </Form>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' href='#'>\n            New around here? Sign up\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' href='#'>\n            Forgot password?\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownVariations`}\n    </code>\n  </pre>\n)\n","import { Fragment, useEffect } from 'react'\r\nimport Prism from 'prismjs'\r\nimport { Row, Col, CardText } from 'reactstrap'\r\nimport DropdownControlled from './DropdownControlled'\r\nimport DropdownUncontrolled from './DropdownUncontrolled'\r\nimport DropdownBasic from './DropdownBasic'\r\nimport DropdownSplit from './DropdownSplit'\r\nimport DropdownOutline from './DropdownOutline'\r\nimport DropdownFlat from './DropdownFlat'\r\nimport DropdownGradient from './DropdownGradient'\r\nimport DropdownSizes from './DropdownSizes'\r\nimport DropdownDirections from './DropdownDirections'\r\nimport DropdownVariations from './DropdownVariations'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\nimport Card from '@components/card-snippet'\r\nimport {\r\n  dropdownControlled,\r\n  dropdownUncontrolled,\r\n  dropdownBasic,\r\n  dropdownOutline,\r\n  dropdownDirections,\r\n  dropdownFlat,\r\n  dropdownGradient,\r\n  dropdownSizes,\r\n  dropdownSplit,\r\n  dropdownVariations\r\n} from './DropdownsSourceCode'\r\n\r\nconst Dropdowns = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Dropdowns' breadCrumbParent='Components' breadCrumbActive='Dropdowns' />\r\n      <Row>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Controlled Dropdown' code={dropdownControlled}>\r\n            <CardText>If you want to use controlled dropdown you'll have to manage state for it.</CardText>\r\n            <DropdownControlled />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Uncontrolled Dropdown' code={dropdownUncontrolled}>\r\n            <CardText>With uncontrolled dropdown you won't have to manage state.</CardText>\r\n            <DropdownUncontrolled />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Basic' code={dropdownBasic}>\r\n            <DropdownBasic />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Split' code={dropdownSplit}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>.dropdown-toggle-split</code> and add a split button within your dropdown to create a\r\n              dropdownSplit\r\n            </CardText>\r\n            <DropdownSplit />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Outline' code={dropdownOutline}>\r\n            <CardText className='mb-0'>\r\n              Use <code>.outline</code> attribute with button to create outline dropdown.\r\n            </CardText>\r\n            <DropdownOutline />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Flat' code={dropdownFlat}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>color=\"flat-*\"</code> to create a flat dropdown.\r\n            </CardText>\r\n            <DropdownFlat />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Gradient' code={dropdownGradient}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>btn-gradient-*</code> to create a gradient dropdown.\r\n            </CardText>\r\n            <DropdownGradient />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Sizes' code={dropdownSizes}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>.btn-[lg/sm]</code> to create a small or large dropdown.\r\n            </CardText>\r\n            <DropdownSizes />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Directions' code={dropdownDirections}>\r\n            <CardText className='mb-0'>\r\n              You can use drop from different direction to use drop from\r\n              <code>bottom right</code> use right prop with your dropdown-menu. for drop directions use{' '}\r\n              <code>direction=[up/left/right]</code>\r\n            </CardText>\r\n            <DropdownDirections />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Variations' code={dropdownVariations}>\r\n            <CardText>\r\n              To create a dropdown with groups you can use prop <code>header</code> for the header of groups and for\r\n              separation of group you can use prop <code>divider</code>.\r\n            </CardText>\r\n            <CardText className='mb-0'>\r\n              To create a dropdown with icons use class <code>.dropdown-icon-wrapper</code> with your dropdown.\r\n            </CardText>\r\n            <DropdownVariations />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Dropdowns\r\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonDropdown from './ButtonDropdown';\nimport { omit } from './utils';\nvar omitKeys = ['defaultOpen'];\n\nvar UncontrolledButtonDropdown = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledButtonDropdown, _Component);\n\n  function UncontrolledButtonDropdown(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledButtonDropdown.prototype;\n\n  _proto.toggle = function toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(ButtonDropdown, _extends({\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledButtonDropdown;\n}(Component);\n\nexport { UncontrolledButtonDropdown as default };\nUncontrolledButtonDropdown.propTypes = _objectSpread({\n  defaultOpen: PropTypes.bool\n}, ButtonDropdown.propTypes);","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any,\n  code: PropTypes.node,\n  iconCode: PropTypes.node,\n  noBody: PropTypes.bool\n}\n"],"sourceRoot":""}