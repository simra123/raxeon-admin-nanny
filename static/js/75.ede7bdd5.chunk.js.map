{"version":3,"sources":["views/front-end/application/for-customer/Form.js","middleware/API.js","views/components/toastify/index.js","middleware/BaseURL.js"],"names":["CustomerForm","useState","heading1","text1","heading2","text2","heading3","text3","heading4","text4","allData","setAllData","img","setImg","preview","setPreview","id","setId","success","setSuccess","history","useHistory","uppy","Uppy","meta","type","restrictions","maxNumberOfFiles","autoProceed","use","thumbnailGenerator","on","file","data","useEffect","getData","a","Action","get","res","_id","image","console","log","eventChange","e","target","name","value","prev","newData","FormData","append","updateData","preventDefault","put","toast","title","text","setTimeout","push","error","tag","sm","className","height","src","baseURL","alt","md","for","FormGroup","addonType","size","onChange","placeholder","Ripple","color","onClick","axios","create","SuccessToast","props","icon","role","ErrorToast"],"mappings":"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","file":"static/js/75.ede7bdd5.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Uppy from '@uppy/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\r\nimport { DragDrop } from '@uppy/react'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Label,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  CustomInput,\r\n  Spinner\r\n} from 'reactstrap'\r\nimport Action from '../../../../middleware/API'\r\nimport baseURL from '../../../../middleware/BaseURL'\r\nimport { FaTextWidth } from 'react-icons/fa'\r\nimport '../../../../@core/scss/react/libs/file-uploader/file-uploader.scss'\r\nimport 'uppy/dist/uppy.css'\r\n//import toast types from components \r\nimport { SuccessToast, ErrorToast } from '../../../components/toastify'\r\n//import toasts from react\r\nimport { toast } from 'react-toastify'\r\nconst CustomerForm = () => {\r\n\r\n  const [allData, setAllData] = useState({\r\n    heading1: '',\r\n    text1: '',\r\n    heading2: '',\r\n    text2: '',\r\n    heading3: '',\r\n    text3: '',\r\n    heading4: '',\r\n    text4: ''\r\n  })\r\n  //  file Uploader\r\n  const [img, setImg] = useState(null)\r\n  const [preview, setPreview] = useState(null)\r\n  const [id, setId] = useState('')\r\n  //for spin\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  //for updating the route\r\n  const history = useHistory()\r\n\r\n  const uppy = new Uppy({\r\n    meta: { type: 'avatar' },\r\n    restrictions: { maxNumberOfFiles: 1 },\r\n    autoProceed: true\r\n  })\r\n\r\n  uppy.use(thumbnailGenerator)\r\n\r\n  uppy.on('thumbnail:generated', (file, preview) => {\r\n    setImg(file.data)\r\n    setPreview(preview)\r\n  })\r\n  //get api\r\n  useEffect(() => {\r\n    //using promise \r\n    const getData = async () => {\r\n      //if else\r\n      try {\r\n        const { data } = await Action.get('/customer')\r\n        const res = data.data[0]\r\n        setId(res._id)\r\n        //updating intial state\r\n        setAllData({\r\n          heading1: res.heading1,\r\n          text1: res.text1,\r\n          heading2: res.heading2,\r\n          text2: res.text2,\r\n          heading3: res.heading3,\r\n          text3: res.text3,\r\n          heading4: res.heading4,\r\n          text4: res.text4\r\n        })\r\n        setImg(res.image)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n  console.log(id)\r\n  //onchange\r\n  const eventChange = (e) => {\r\n    const { name, value } = e.target\r\n    setAllData((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  //combinin all data\r\n  const newData = new FormData()\r\n  newData.append('heading1', allData.heading1)\r\n  newData.append('heading2', allData.heading2)\r\n  newData.append('heading3', allData.heading3)\r\n  newData.append('heading4', allData.heading4)\r\n  newData.append('text1', allData.text1)\r\n  newData.append('text2', allData.text2)\r\n  newData.append('text3', allData.text3)\r\n  newData.append('text4', allData.text4)\r\n  newData.append('file', img)\r\n\r\n  //put api\r\n  const updateData = async (e) => {\r\n    e.preventDefault()\r\n    const res = await Action.put(`/customer/${ id }`, newData)\r\n\r\n    if (res.data.success) {\r\n      toast.success(<SuccessToast title=\"Success\" text=\"Section updated Successfully!\" />)\r\n      setSuccess(true)\r\n      setTimeout(() => {\r\n        history.push('/frontend/app/customer')\r\n      }, 1000)\r\n\r\n    } else {\r\n      console.log(error)\r\n      setSuccess(false)\r\n      toast.error(<ErrorToast title=\"error\" text=\"Something went wrong, try again later\" />)\r\n    }\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Edit For Customer Section</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Form>\r\n          <Row>\r\n            <Col sm='12' className=\"my-2\">\r\n              {/* basic image upload */ }\r\n\r\n              <h6> Upload Application Image </h6>\r\n              <DragDrop uppy={ uppy } />\r\n              { img !== null ? <img className='rounded mt-2' height={ 200 } src={ preview ? preview : baseURL + img } alt='avatar' /> : null }\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md=\"6\">\r\n              {/* customer form */ }\r\n              <Label for='icon-heading'>Heading</Label>\r\n              <InputGroup className='input-group-merge' tag={ FormGroup }>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText>\r\n                    <FaTextWidth size={ 15 } />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type='text' name=\"heading1\" value={ allData.heading1 } onChange={ eventChange } id='icon-heading' placeholder='Enter your Heading' />\r\n              </InputGroup>\r\n            </Col>\r\n\r\n\r\n            <Col sm=\"12\" md=\"6\">\r\n              {/* customer form */ }\r\n              <Label for='icon-text'>Text</Label>\r\n              <InputGroup className='input-group-merge' tag={ FormGroup }>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText>\r\n                    <FaTextWidth size={ 15 } />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type='text' name=\"text1\" value={ allData.text1 } onChange={ eventChange } id='icon-text' placeholder='Enter your Text' />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col sm=\"12\" md=\"6\">\r\n              {/* customer form */ }\r\n              <Label for='icon-heading'>Heading</Label>\r\n              <InputGroup className='input-group-merge' tag={ FormGroup }>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText>\r\n                    <FaTextWidth size={ 15 } />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type='text' name=\"heading2\" value={ allData.heading2 } onChange={ eventChange } id='icon-heading' placeholder='Enter your Heading' />\r\n              </InputGroup>\r\n            </Col>\r\n\r\n\r\n            <Col sm=\"12\" md=\"6\">\r\n              {/* customer form */ }\r\n              <Label for='icon-text'>Text</Label>\r\n              <InputGroup className='input-group-merge' tag={ FormGroup }>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText>\r\n                    <FaTextWidth size={ 15 } />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type='text' name=\"text2\" value={ allData.text2 } onChange={ eventChange } id='icon-text' placeholder='Enter your Text' />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col sm=\"12\" md=\"6\">\r\n              {/* customer form */ }\r\n              <Label for='icon-heading'>Heading</Label>\r\n              <InputGroup className='input-group-merge' tag={ FormGroup }>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText>\r\n                    <FaTextWidth size={ 15 } />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type='text' name=\"heading3\" value={ allData.heading3 } onChange={ eventChange } id='icon-heading' placeholder='Enter your Heading' />\r\n              </InputGroup>\r\n            </Col>\r\n\r\n\r\n            <Col sm=\"12\" md=\"6\">\r\n              {/* customer form */ }\r\n              <Label for='icon-text'>Text</Label>\r\n              <InputGroup className='input-group-merge' tag={ FormGroup }>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText>\r\n                    <FaTextWidth size={ 15 } />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type='text' name=\"text3\" value={ allData.text3 } onChange={ eventChange } id='icon-text' placeholder='Enter your Text' />\r\n              </InputGroup>\r\n            </Col>\r\n\r\n\r\n            <Col sm=\"12\" md=\"6\">\r\n              {/* customer form */ }\r\n              <Label for='icon-heading'>Heading</Label>\r\n              <InputGroup className='input-group-merge' tag={ FormGroup }>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText>\r\n                    <FaTextWidth size={ 15 } />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type='text' name=\"heading4\" value={ allData.heading4 } name=\"heading4\" value={ allData.heading4 } onChange={ eventChange } id='icon-heading' placeholder='Enter your Heading' />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col sm=\"12\" md=\"6\">\r\n              {/* customer form */ }\r\n              <Label for='icon-text'>Text</Label>\r\n              <InputGroup className='input-group-merge' tag={ FormGroup }>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText>\r\n                    <FaTextWidth size={ 15 } />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type='text' name=\"text4\" value={ allData.text4 } onChange={ eventChange } id='icon-text' placeholder='Enter your Text' />\r\n              </InputGroup>\r\n            </Col>\r\n            <Col sm=\"12\" className=\"mt-2\">\r\n              <FormGroup className='d-flex mb-0'>\r\n                <Button.Ripple className='mr-1' color='primary' type='submit' onClick={ e => updateData(e) }>\r\n                  Submit\r\n                </Button.Ripple>\r\n                {/* spinner */ }\r\n                { success ? <Spinner color='primary' /> : null }\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default CustomerForm\r\n","\r\nimport axios from 'axios'\r\n\r\nexport default axios.create({\r\n    //baseURL: `http://localhost:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    baseURL: `https://nanybackend.herokuapp.com`\r\n})","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport {Check, X, AlertTriangle, Info } from 'react-feather'\n\n//toast success\nexport const SuccessToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Success!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast error\nexport const ErrorToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\n        <h6 className='toast-title'>Error!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast warning\nexport const WarningToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast info\nexport const InfoToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n) ","//const baseURL = \"http://localhost:4000/\"\r\n// const baseURL = \"http://3.94.191.228:4000/\"\r\nconst baseURL = `https://nanybackend.herokuapp.com/image/`\r\nexport default baseURL"],"sourceRoot":""}