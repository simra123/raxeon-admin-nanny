{"version":3,"sources":["views/apps/chat/store/actions/index.js","views/apps/chat/Chat.js","views/apps/chat/SidebarLeft.js","views/apps/chat/UserProfileSidebar.js","views/apps/chat/index.js","../node_modules/reactstrap/es/CardText.js"],"names":["getChatContacts","dispatch","axios","get","then","res","type","data","selectChat","id","ChatLog","props","handleUser","handleUserSidebarRight","handleSidebar","store","userSidebarLeft","userProfile","selectedUser","useState","attachOpen","setAttachOpen","chatArea","useRef","useDispatch","msg","setMsg","useEffect","Object","keys","length","ReactDOM","findDOMNode","current","scrollTop","Number","MAX_SAFE_INTEGER","handleSendMsg","e","obj","preventDefault","message","post","contact","ChatWrapper","chat","PerfectScrollbar","modal","setModal","toggleModalPrimary","prev","className","classnames","onClick","window","innerWidth","size","imgHeight","imgWidth","img","avatar","status","fullName","UncontrolledDropdown","DropdownToggle","color","DropdownMenu","right","DropdownItem","href","Modal","isOpen","toggle","modalClassName","ModalHeader","ModalBody","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","ModalFooter","Button","ref","options","wheelPropagation","chatLog","formattedChatLog","chatMessageSenderId","senderId","undefined","msgGroup","messages","forEach","index","push","time","formattedChatData","map","item","Form","onSubmit","value","onChange","target","SidebarLeft","sidebar","handleUserSidebarLeft","chats","contacts","about","setAbout","query","setQuery","active","setActive","setStatus","filteredChat","setFilteredChat","filteredContacts","setFilteredContacts","handleUserClick","show","role","rows","defaultValue","CustomInput","label","checked","name","defaultChecked","searchFilterFunction","toLowerCase","includes","filteredChatsArr","filter","filteredContactssArr","formatDateToMonthShort","lastMessage","Date","CardText","unseenMsgs","Badge","pill","UserProfileSidebar","user","userSidebarRight","AppChat","useSelector","state","setUser","setSidebar","setUserSidebarRight","setUserSidebarLeft","Chat","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/156.5c6ac538.chunk.js","sourcesContent":["import axios from 'axios'\n\n// ** Get User Profile\nexport const getUserProfile = () => {\n  return dispatch => {\n    return axios.get('/apps/chat/users/profile-user').then(res => {\n      return dispatch({\n        type: 'GET_USER_PROFILE',\n        userProfile: res.data\n      })\n    })\n  }\n}\n\n// ** Get Chats & Contacts\nexport const getChatContacts = () => {\n  return dispatch => {\n    axios.get('/apps/chat/chats-and-contacts').then(res => {\n      dispatch({\n        type: 'GET_CHAT_CONTACTS',\n        data: res.data\n      })\n    })\n  }\n}\n\n// ** Select Chat\nexport const selectChat = id => {\n  return dispatch => {\n    axios.get('/apps/chat/get-chat', { id }).then(res => {\n      dispatch({ type: 'SELECT_CHAT', data: res.data })\n      dispatch(getChatContacts())\n    })\n  }\n}\n\n// ** Send Msg\nexport const sendMsg = obj => {\n  return dispatch => {\n    axios.post('/apps/chat/send-msg', { obj }).then(res => {\n      dispatch({ type: 'SEND_MSG', data: res.data })\n      dispatch(selectChat(obj.contact.id))\n    })\n  }\n}\n","// ** React Imports\nimport { useState, useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport '../../../@core/scss/base/custom-rtl.scss'\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport {BiLink, BiVideo} from 'react-icons/bi'\nimport {IoDocumentTextOutline} from 'react-icons/io5'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { sendMsg } from './store/actions'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { MessageSquare, Menu, PhoneCall, Video, Search, MoreVertical, Mic, Image, Send } from 'react-feather'\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  Label,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap'\n\nconst ChatLog = props => {\n  // ** Props & Store\n  const { handleUser, handleUserSidebarRight, handleSidebar, store, userSidebarLeft } = props\n  const { userProfile, selectedUser } = store\n\n\n  //show attach options \n  const [attachOpen, setAttachOpen] = useState(false)\n  // ** Refs & Dispatch\n  const chatArea = useRef(null)\n  const dispatch = useDispatch()\n\n  // ** State\n  const [msg, setMsg] = useState('')\n\n  // ** Scroll to chat bottom\n  const scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(chatArea.current)\n    chatContainer.scrollTop = Number.MAX_SAFE_INTEGER\n  }\n\n  // ** If user chat is not empty scrollToBottom\n  useEffect(() => {\n    const selectedUserLen = Object.keys(selectedUser).length\n\n    if (selectedUserLen) {\n      scrollToBottom()\n    }\n  }, [selectedUser])\n\n  // ** Formats chat data based on sender\n  const formattedChatData = () => {\n    let chatLog = []\n    if (selectedUser.chat) {\n      chatLog = selectedUser.chat.chat\n    }\n\n    const formattedChatLog = []\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\n    let msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    }\n    chatLog.forEach((msg, index) => {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          time: msg.time\n        })\n      } else {\n        chatMessageSenderId = msg.senderId\n        formattedChatLog.push(msgGroup)\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [\n            {\n              msg: msg.message,\n              time: msg.time\n            }\n          ]\n        }\n      }\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\n    })\n    return formattedChatLog\n  }\n\n  // ** Renders user chat\n  const renderChats = () => {\n    \n    return formattedChatData().map((item, index) => {\n      return (\n        <div\n          key={index}\n          className={classnames('chat', {\n            'chat-left': item.senderId !== 11\n          })}\n        >\n          <div className='chat-avatar'>\n            <Avatar\n              className='box-shadow-1 cursor-pointer'\n              img={item.senderId === 11 ? userProfile.avatar : selectedUser.contact.avatar}\n            />\n          </div>\n\n          <div className='chat-body'>\n            {item.messages.map(chat => (\n              <div key={chat.msg} className='chat-content'>\n                <p>{chat.msg}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  // ** Opens right sidebar & handles its data\n  const handleAvatarClick = obj => {\n    handleUserSidebarRight()\n    handleUser(obj)\n  }\n\n  // ** On mobile screen open left sidebar on Start Conversation Click\n  const handleStartConversation = () => {\n    if (!Object.keys(selectedUser).length && !userSidebarLeft && window.innerWidth <= 1200) {\n      handleSidebar()\n    }\n  }\n\n  // ** Sends New Msg\n  const handleSendMsg = e => {\n    e.preventDefault()\n    if (msg.length) {\n      dispatch(sendMsg({ ...selectedUser, message: msg }))\n      setMsg('')\n    }\n  }\n\n  // ** ChatWrapper tag based on chat's length\n  const ChatWrapper = Object.keys(selectedUser).length && selectedUser.chat ? PerfectScrollbar : 'div'\n\n  //open modal\n  const [modal, setModal] = useState(null)\n\n  const toggleModalPrimary = () => {\n   setModal(prev => !prev)\n  }\n  return (\n    <div className='chat-app-window'>\n      <div className={classnames('start-chat-area', { 'd-none': Object.keys(selectedUser).length })}>\n        <div className='start-chat-icon mb-1'>\n          <MessageSquare />\n        </div>\n        <h4 className='sidebar-toggle start-chat-text' onClick={handleStartConversation}>\n          Start Conversation\n        </h4>\n      </div>\n      {Object.keys(selectedUser).length ? (\n        <div className={classnames('active-chat', { 'd-none': selectedUser === null })}>\n          <div className='chat-navbar'>\n            <header className='chat-header'>\n              <div className='d-flex align-items-center'>\n                <div className='sidebar-toggle d-block d-lg-none mr-1' onClick={handleSidebar}>\n                  <Menu size={21} />\n                </div>\n                <Avatar\n                  imgHeight='36'\n                  imgWidth='36'\n                  img={selectedUser.contact.avatar}\n                  status={selectedUser.contact.status}\n                  className='avatar-border user-profile-toggle m-0 mr-1'\n                  onClick={() => handleAvatarClick(selectedUser.contact)}\n                />\n                <h6 className='mb-0'>{selectedUser.contact.fullName}</h6>\n              </div>\n              <div className='d-flex align-items-center'>\n                {/* <PhoneCall size={18} className='cursor-pointer d-sm-block d-none mr-1' />\n                <Video size={18} className='cursor-pointer d-sm-block d-none mr-1' />\n                <Search size={18} className='cursor-pointer d-sm-block d-none' /> */}\n                <UncontrolledDropdown>\n                  <DropdownToggle className='btn-icon' color='transparent' size='sm'>\n                    <MoreVertical size='18' />\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem href='/'  onClick={(e) => { \n                        e.preventDefault()  \n                        toggleModalPrimary('secondary') \n                        }}>\n                      Add Participant\n                    </DropdownItem>\n                    \n                  </DropdownMenu>\n                </UncontrolledDropdown>\n\n                {/* add participant modal */}\n                  <Modal\n                    isOpen={modal}\n                    toggle={() => toggleModalPrimary('secondary')}\n                    className='modal-dialog-centered'\n                    modalClassName=\"modal-primary\"\n                    key={'secondary'}>\n                    <ModalHeader toggle={() => toggleModalPrimary('secondary')}>Add Participant</ModalHeader>\n                    <ModalBody>\n                    {/* search participant */}\n                    <InputGroup className='mb-2'>\n                      <InputGroupAddon addonType='prepend'>\n                        <InputGroupText>\n                          <Search size={14} />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input placeholder='search participant' />\n                    </InputGroup>\n                 \n                    </ModalBody>\n                    <ModalFooter>\n                            \n                      <Button color=\"primary\" onClick={() => toggleModalPrimary('secondary')}>\n                        Add\n                      </Button>\n                    </ModalFooter>\n                  </Modal>\n              </div>\n            </header>\n          </div>\n\n          <ChatWrapper ref={chatArea} className='user-chats' options={{ wheelPropagation: false }}>\n            {selectedUser.chat ? <div className='chats'>{renderChats()}</div> : null}\n          </ChatWrapper>\n         { attachOpen ? <div className=\"animate__animated animate__fadeIn animate_faster d-flex  chat-icons\">\n           <span className=\"each-icon\"> <Image  size={20}/> </span>\n           <span className=\"each-icon\"> <BiVideo  size={20}/> </span>\n           <span className=\"each-icon\"> <IoDocumentTextOutline size={20}/> </span>\n          </div> : null}\n          <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\n            <InputGroup className='input-group-merge mr-1 form-send-message'>\n            <InputGroupAddon addonType='append'>\n                <InputGroupText onClick={() => setAttachOpen(prev => !prev)}>\n                  <div className=\"icon \">\n                    <BiLink size={22}/>\n                  </div>\n                </InputGroupText>\n              </InputGroupAddon>\n              \n              <Input\n                value={msg}\n                onChange={e => setMsg(e.target.value)}\n                placeholder='Type your message or use speech to text'\n              />\n             \n            </InputGroup>\n            <Button className='send' color='primary'>\n              <Send size={14} className='d-lg-none' />\n              <span className='d-none d-lg-block'>Send</span>\n            </Button>\n          </Form>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ChatLog\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { selectChat } from './store/actions'\n\n// ** Utils\nimport { formatDateToMonthShort } from '@utils'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Search, CheckSquare, Bell, User, Trash } from 'react-feather'\nimport { CardText, InputGroup, InputGroupAddon, Input, InputGroupText, Badge, CustomInput, Button } from 'reactstrap'\n\nconst SidebarLeft = props => {\n  // ** Props & Store\n  const { store, sidebar, handleSidebar, userSidebarLeft, handleUserSidebarLeft } = props\n  const { chats, contacts, userProfile } = store\n\n  // ** Dispatch\n  const dispatch = useDispatch()\n\n  // ** State\n  const [about, setAbout] = useState('')\n  const [query, setQuery] = useState('')\n  const [active, setActive] = useState({})\n  const [status, setStatus] = useState('online')\n  const [filteredChat, setFilteredChat] = useState([])\n  const [filteredContacts, setFilteredContacts] = useState([])\n\n  // ** Handles User Chat Click\n  const handleUserClick = (type, id) => {\n    dispatch(selectChat(id))\n    setActive({ type, id })\n    if (sidebar === true) {\n      handleSidebar()\n    }\n  }\n\n  // ** Renders Chat\n  const renderChats = () => {\n    if (chats && chats.length) {\n      if (query.length && !filteredChat.length) {\n        return (\n          <li className='no-results show'>\n            <h6 className='mb-0'>No Chats Found</h6>\n          </li>\n        )\n      } else {\n        const arrToMap = query.length && filteredChat.length ? filteredChat : chats\n\n        return arrToMap.map(item => {\n          const time = formatDateToMonthShort(item.chat.lastMessage ? item.chat.lastMessage.time : new Date())\n\n          return (\n            <li\n              className={classnames({\n                active: active.type === 'chat' && active.id === item.id\n              })}\n              key={item.id}\n              onClick={() => handleUserClick('chat', item.id)}\n            >\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' status={item.status} />\n              <div className='chat-info flex-grow-1'>\n                <h5 className='mb-0'>{item.fullName}</h5>\n                <CardText className='text-truncate'>\n                  {item.chat.lastMessage ? item.chat.lastMessage.message : chats[chats.length - 1].message}\n                </CardText>\n              </div>\n              <div className='chat-meta text-nowrap'>\n                <small className='float-right mb-25 chat-time ml-25'>{time}</small>\n                {item.chat.unseenMsgs >= 1 ? (\n                  <Badge className='float-right' color='danger' pill>\n                    {item.chat.unseenMsgs}\n                  </Badge>\n                ) : null}\n              </div>\n            </li>\n          )\n        })\n      }\n    } else {\n      return null\n    }\n  }\n\n  // ** Renders Contact\n  const renderContacts = () => {\n    if (contacts && contacts.length) {\n      if (query.length && !filteredContacts.length) {\n        return (\n          <li className='no-results show'>\n            <h6 className='mb-0'>No Chats Found</h6>\n          </li>\n        )\n      } else {\n        const arrToMap = query.length && filteredContacts.length ? filteredContacts : contacts\n        return arrToMap.map(item => {\n          return (\n            <li\n              className={classnames({\n                active: active.type === 'contact' && active.id === item.id\n              })}\n              key={item.fullName}\n              onClick={() => handleUserClick('contact', item.id)}\n            >\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' />\n              <div className='chat-info flex-grow-1'>\n                <h5 className='mb-0'>{item.fullName}</h5>\n                <CardText className='text-truncate'>{item.about}</CardText>\n              </div>\n            </li>\n          )\n        })\n      }\n    } else {\n      return null\n    }\n  }\n\n  // ** Handles Filter\n  const handleFilter = e => {\n    setQuery(e.target.value)\n    const searchFilterFunction = contact => contact.fullName.toLowerCase().includes(e.target.value.toLowerCase())\n    const filteredChatsArr = chats.filter(searchFilterFunction)\n    const filteredContactssArr = contacts.filter(searchFilterFunction)\n    setFilteredChat([...filteredChatsArr])\n    setFilteredContacts([...filteredContactssArr])\n  }\n\n  return store ? (\n    <div className='sidebar-left'>\n      <div className='sidebar'>\n        <div\n          className={classnames('chat-profile-sidebar', {\n            show: userSidebarLeft\n          })}\n        >\n          <header className='chat-profile-header'>\n            <div className='close-icon' onClick={handleUserSidebarLeft}>\n              <X size={14} />\n            </div>\n            <div className='header-profile-sidebar'>\n              <Avatar className='box-shadow-1 avatar-border' img={userProfile.avatar} status={status} size='xl' />\n              <h4 className='chat-user-name'>{userProfile.fullName}</h4>\n              <span className='user-post'>{userProfile.role}</span>\n            </div>\n          </header>\n          <PerfectScrollbar className='profile-sidebar-area' options={{ wheelPropagation: false }}>\n            <h6 className='section-label mb-1'>About</h6>\n            <div className='about-user'>\n              <Input\n                rows='5'\n                defaultValue={userProfile.about}\n                type='textarea'\n                onChange={e => setAbout(e.target.value)}\n                className={classnames('char-textarea', {\n                  'text-danger': about && about.length > 120\n                })}\n              />\n              <small className='counter-value float-right'>\n                <span className='char-count'>{userProfile.about ? userProfile.about.length : 0}</span>/ 120\n              </small>\n            </div>\n            <h6 className='section-label mb-1 mt-3'>Status</h6>\n            <ul className='list-unstyled user-status'>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-primary'\n                  id='online'\n                  label='Online'\n                  onChange={e => setStatus('online')}\n                  checked={status === 'online'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-danger'\n                  id='busy'\n                  label='Do Not Disturb'\n                  onChange={e => setStatus('busy')}\n                  checked={status === 'busy'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-warning'\n                  id='away'\n                  label='Away'\n                  onChange={e => setStatus('away')}\n                  checked={status === 'away'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-secondary'\n                  id='offline'\n                  label='Offline'\n                  onChange={e => setStatus('offline')}\n                  checked={status === 'offline'}\n                />\n              </li>\n            </ul>\n            <h6 className='section-label mb-1 mt-2'>Settings</h6>\n            <ul className='list-unstyled'>\n              <li className='d-flex justify-content-between align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <CheckSquare className='mr-75' size='18' />\n                  <span className='align-middle'>Two-step Verification</span>\n                </div>\n                <CustomInput type='switch' id='verification' name='verification' label='' defaultChecked />\n              </li>\n              <li className='d-flex justify-content-between align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <Bell className='mr-75' size='18' />\n                  <span className='align-middle'>Notification</span>\n                </div>\n                <CustomInput type='switch' id='notifications' name='notifications' label='' />\n              </li>\n              <li className='d-flex align-items-center cursor-pointer mb-1'>\n                <User className='mr-75' size='18' />\n                <span className='align-middle'>Invite Friends</span>\n              </li>\n              <li className='d-flex align-items-center cursor-pointer'>\n                <Trash className='mr-75' size='18' />\n                <span className='align-middle'>Delete Account</span>\n              </li>\n            </ul>\n            <div className='mt-3'>\n              <Button color='primary'>Logout</Button>\n            </div>\n          </PerfectScrollbar>\n        </div>\n        <div\n          className={classnames('sidebar-content', {\n            show: sidebar === true\n          })}\n        >\n          <div className='sidebar-close-icon' onClick={handleSidebar}>\n            <X size={14} />\n          </div>\n          <div className='chat-fixed-search'>\n            <div className='d-flex align-items-center w-100'>\n              <div className='sidebar-profile-toggle' onClick={handleUserSidebarLeft}>\n                {Object.keys(userProfile).length ? (\n                  <Avatar\n                    className='avatar-border'\n                    img={userProfile.avatar}\n                    status={status}\n                    imgHeight='42'\n                    imgWidth='42'\n                  />\n                ) : null}\n              </div>\n              <InputGroup className='input-group-merge ml-1 w-100'>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText className='round'>\n                    <Search className='text-muted' size={14} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  value={query}\n                  className='round'\n                  placeholder='Search or start a new chat'\n                  onChange={handleFilter}\n                />\n              </InputGroup>\n            </div>\n          </div>\n          <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\n            <h4 className='chat-list-title'>Chats</h4>\n            <ul className='chat-users-list chat-list media-list'>{renderChats()}</ul>\n            <h4 className='chat-list-title'>Contacts</h4>\n            <ul className='chat-users-list contact-list media-list'>{renderContacts()}</ul>\n          </PerfectScrollbar>\n        </div>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default SidebarLeft\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Mail, PhoneCall, Clock, Tag, Star, Image, Trash, Slash } from 'react-feather'\n\nconst UserProfileSidebar = props => {\n  // ** Props\n  const { user, handleUserSidebarRight, userSidebarRight } = props\n\n  return (\n    <div className={classnames('user-profile-sidebar', { show: userSidebarRight === true })}>\n      <header className='user-profile-header'>\n        <span className='close-icon' onClick={handleUserSidebarRight}>\n          <X size={14} />\n        </span>\n        <div className='header-profile-sidebar'>\n          <Avatar\n            className='box-shadow-1 avatar-border'\n            size='xl'\n            status={user.status}\n            img={user.avatar}\n            imgHeight='70'\n            imgWidth='70'\n          />\n          <h4 className='chat-user-name'>{user.fullName}</h4>\n          <span className='user-post'>{user.role}</span>\n        </div>\n      </header>\n      <PerfectScrollbar className='user-profile-sidebar-area' options={{ wheelPropagation: false }}>\n        <h6 className='section-label mb-1'>About</h6>\n        <p>{user.about}</p>\n        <div className='personal-info'>\n          <h6 className='section-label mb-1 mt-3'>Personal Information</h6>\n          <ul className='list-unstyled'>\n            <li className='mb-1'>\n              <Mail className='mr-50' size={17} />\n              <span className='align-middle'>lucifer@email.com</span>\n            </li>\n            <li className='mb-1'>\n              <PhoneCall className='mr-50' size={17} />\n              <span className='align-middle'> +1(123) 456 - 7890</span>\n            </li>\n            <li>\n              <Clock className='mr-50' size={17} />\n              <span className='align-middle'> Mon - Fri 10AM - 8PM</span>\n            </li>\n          </ul>\n        </div>\n        <div className='more-options'>\n          <h6 className='section-label mb-1 mt-3'>Options</h6>\n          <ul className='list-unstyled'>\n            <li className='cursor-pointer mb-1'>\n              <Tag className='mr-50' size={17} />\n              <span className='align-middle'> Add Tag</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Star className='mr-50' size={17} />\n              <span className='align-middle'> Important Contact</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Image className='mr-50' size={17} />\n              <span className='align-middle'> Shared Media</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Trash className='mr-50' size={17} />\n              <span className='align-middle'> Delete Contact</span>\n            </li>\n            <li className='cursor-pointer'>\n              <Slash className='mr-50' size={17} />\n              <span className='align-middle'>Block Contact</span>\n            </li>\n          </ul>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default UserProfileSidebar\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Chat App Component Imports\nimport Chat from './Chat'\nimport Sidebar from './SidebarLeft'\nimport UserProfileSidebar from './UserProfileSidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserProfile, getChatContacts } from './store/actions'\n\nimport '@styles/base/pages/app-chat.scss'\nimport '@styles/base/pages/app-chat-list.scss'\n\nconst AppChat = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.chat)\n\n  // ** States\n  const [user, setUser] = useState({})\n  const [sidebar, setSidebar] = useState(false)\n  const [userSidebarRight, setUserSidebarRight] = useState(false)\n  const [userSidebarLeft, setUserSidebarLeft] = useState(false)\n\n  // ** Sidebar & overlay toggle functions\n  const handleSidebar = () => setSidebar(!sidebar)\n  const handleUserSidebarLeft = () => setUserSidebarLeft(!userSidebarLeft)\n  const handleUserSidebarRight = () => setUserSidebarRight(!userSidebarRight)\n  const handleOverlayClick = () => {\n    setSidebar(false)\n    setUserSidebarRight(false)\n    setUserSidebarLeft(false)\n  }\n\n  // ** Set user function for Right Sidebar\n  const handleUser = obj => setUser(obj)\n\n  // ** Get data on Mount\n  useEffect(() => {\n    dispatch(getChatContacts())\n    dispatch(getUserProfile())\n  }, [dispatch])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        sidebar={sidebar}\n        handleSidebar={handleSidebar}\n        userSidebarLeft={userSidebarLeft}\n        handleUserSidebarLeft={handleUserSidebarLeft}\n      />\n      <div className='content-right'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <div\n              className={classnames('body-content-overlay', {\n                show: userSidebarRight === true || sidebar === true || userSidebarLeft === true\n              })}\n              onClick={handleOverlayClick}\n            ></div>\n            <Chat\n              store={store}\n              handleUser={handleUser}\n              handleSidebar={handleSidebar}\n              userSidebarLeft={userSidebarLeft}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n            <UserProfileSidebar\n              user={user}\n              userSidebarRight={userSidebarRight}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default AppChat\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;"],"sourceRoot":""}